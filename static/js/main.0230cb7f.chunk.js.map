{"version":3,"sources":["components/Fullscreen.js","components/SidebarToggle.js","components/Legend.js","components/Category.js","utils/data.js","components/SidebarContent.js","components/Sidebar.js","utils/graticule.js","utils/map.js","components/Map.js","utils/popup.js","components/Chart.js","components/List.js","components/ChartList.js","App.js","serviceWorker.js","index.js"],"names":["Fullscreen","children","useState","isFullscreen","setFullscreen","enabled","onChange","className","onClick","SidebarToggle","type","Legend","items","data","count","useMemo","year","lastYear","map","code","name","color","key","style","backgroundColor","Category","id","title","legend","selected","categories","hasChart","allLetters","flatMap","c","reduce","obj","getCol","row","parseData","rows","feed","entry","years","col","hasOwnProperty","slice","push","length","countries","forEach","country","y","letters","startsWith","replace","split","value","parseFocusData","byCountry","letter","body","imageurl","imagelink","youtubeid","readmorelink","fetchData","sheet","fetchJsonp","jsonpCallback","then","response","json","Sidebar","category","isDocked","onClose","onSelect","item","App","sidebarOpen","setSidebarOpen","sidebarDocked","setSidebarDocked","useEffect","mql","window","matchMedia","addListener","matches","sidebar","SidebarContent","open","docked","onSetOpen","rootClassName","contentClassName","overlayClassName","sidebarClassName","Graticule","GeoJSON","extend","options","weight","interval","initialize","L","Util","setOptions","this","_layers","sphere","addData","_getFrame","_getGraticule","coordinates","_getMeridian","concat","reverse","features","lng","_getFeature","toString","lat","_getParallel","_lngFix","coords","prop","geometry","properties","getIconPosition","polygon","areas","area","indexOf","Math","max","apply","polylabel","bounds","Map","focus","instance","setInstance","layer","setLayer","container","useRef","find","onFeatureClick","useCallback","latlng","content","feature","CODE","NAME","countryFocus","i","includes","filter","l","join","getPopupContent","current","clientWidth","maxWidth","maxHeight","clientHeight","popup","setLatLng","setContent","openOn","onPopupOpen","document","classList","add","onPopupClose","remove","crs","CRS","resolutions","maxZoom","fitBounds","opacity","fillColor","fillOpacity","clickable","addTo","fetch","geoJSON","invalidateSize","catch","error","console","log","eachLayer","setStyle","some","bringToFront","bringToBack","on","off","infoLayer","getLayers","markerOptions","icon","iconUrl","iconSize","pointToLayer","marker","addLayer","removeLayer","selectedLayer","ref","Chart","show","chart","marginTop","text","xAxis","tickmarkPlacement","yAxis","tooltip","plotOptions","stacking","lineColor","lineWidth","series","reflow","yearRange","findIndex","setCategories","setTitle","addSeries","List","cols","setCols","lists","Object","values","sort","keys","onResize","floor","ceil","addEventListener","removeEventListener","index","numCols","flexGrow","flexShrink","columnCount","src","alt","ChartListToggle","showChart","setShowChart","top","hash","location","cat","substr","getInitialCategory","setCategory","setData","setFocus","setSelected","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0230cb7f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport ReactFullscreen from \"react-full-screen\";\nimport \"./Fullscreen.css\";\n\nconst Fullscreen = ({ children }) => {\n  const [isFullscreen, setFullscreen] = useState(false);\n\n  return (\n    <ReactFullscreen enabled={isFullscreen} onChange={setFullscreen}>\n      {children}\n      <div\n        className={`Fullscreen Fullscreen-${isFullscreen ? \"en\" : \"dis\"}abled`}\n        onClick={() => setFullscreen(!isFullscreen)}\n      />\n    </ReactFullscreen>\n  );\n};\n\nexport default Fullscreen;\n","import React from \"react\";\nimport \"./SidebarToggle.css\";\n\nconst SidebarToggle = ({ type, onClick }) => (\n  <div className={`SidebarToggle SidebarToggle-${type}`} onClick={onClick}>\n    {type === \"open\" ? (\n      <>\n        Map options<span>&gt;</span>\n      </>\n    ) : (\n      <>\n        <span>&lt;</span>Close map options\n      </>\n    )}\n  </div>\n);\n\nexport default SidebarToggle;\n","import React, { useMemo } from \"react\";\nimport \"./Legend.css\";\n\nconst Legend = ({ items, data }) => {\n  const count = useMemo(() => (data ? data.year[data.lastYear] : {}), [data]);\n\n  return (\n    <div className=\"Legend\">\n      {items.map(({ code, name, color }) => (\n        <div key={code}>\n          <span style={{ backgroundColor: color }}></span> {name} ({count[code]}\n          )\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Legend;\n","import React from \"react\";\nimport Legend from \"./Legend\";\nimport \"./Category.css\";\n\nconst Category = ({ id, title, legend, selected, data, onClick }) => (\n  <div\n    onClick={() => onClick(id)}\n    className={`Category${selected ? \" Category-selected\" : \"\"}`}\n  >\n    <h2>{title}</h2>\n    {selected && <Legend items={legend} data={data} />}\n  </div>\n);\n\nexport default Category;\n","import fetchJsonp from \"fetch-jsonp\";\n\nexport const categories = [\n  {\n    id: \"health\",\n    title: \"Health Information System\",\n    legend: [\n      { code: \"s\", name: \"National\", color: \"#238443\" },\n      { code: \"i\", name: \"Indian State\", color: \"#78c679\" },\n      { code: \"p\", name: \"Pilot\", color: \"#d9f0a3\" },\n    ],\n    hasChart: true,\n  },\n  {\n    id: \"covid-19-surveillance\",\n    title: \"COVID-19 Surveillance\",\n    legend: [\n      { code: \"c\", name: \"Operational\", color: \"#d95f0e\" },\n      { code: \"v\", name: \"In development\", color: \"#fec44f\" },\n    ],\n    hasChart: false,\n  },\n  {\n    id: \"covid-19-vaccine\",\n    title: \"COVID-19 Vaccine\",\n    legend: [\n      { code: \"x\", name: \"Operational\", color: \"#d95f0e\" },\n      { code: \"z\", name: \"In development\", color: \"#fec44f\" },\n    ],\n    hasChart: false,\n  },\n  {\n    id: \"tracker\",\n    title: \"Tracker\",\n    legend: [{ code: \"t\", name: \"Tracker\", color: \"#e34a33\" }],\n    hasChart: true,\n  },\n  {\n    id: \"android\",\n    title: \"Android app\",\n    legend: [{ code: \"a\", name: \"Android app\", color: \"#2ca25f\" }],\n    hasChart: true,\n  },\n  {\n    id: \"who\",\n    title: \"WHO Packages\",\n    legend: [{ code: \"w\", name: \"WHO Packages\", color: \"#1d91c0\" }],\n    hasChart: false,\n  },\n  {\n    id: \"emis\",\n    title: \"Education Management Information System (EMIS)\",\n    legend: [{ code: \"e\", name: \"DHIS2 for Education\", color: \"#ae017e\" }],\n    hasChart: false,\n  },\n];\n\nconst allLetters = categories\n  .flatMap((c) => c.legend)\n  .reduce((obj, { code }) => ({ ...obj, [code]: 0 }), {});\n\nconst getCol = (row, name) => row[`gsx$${name}`][\"$t\"];\n\nconst parseData = (data) => {\n  const rows = data.feed.entry;\n  const row = rows[0];\n  const years = [];\n\n  for (let col in row) {\n    if (row.hasOwnProperty(col)) {\n      if (col.slice(0, 5) === \"gsx$y\") {\n        years.push(col.slice(-4));\n      }\n    }\n  }\n\n  const lastYear = years[years.length - 1];\n  const countries = {};\n  const year = {};\n\n  rows.forEach((row) => {\n    const id = getCol(row, \"code\");\n    const name = getCol(row, \"name\");\n\n    if (id) {\n      const country = (countries[id] = {\n        name: name,\n      });\n\n      years.forEach((y) => {\n        let letters = getCol(row, `y${y}`);\n\n        // Remove and fix in google spreadsheet\n        if (id.startsWith(\"IN-\")) {\n          // s/p is not valid for indian states\n          letters = letters.replace(\"s\", \"\").replace(\"p\", \"\");\n        }\n\n        if (letters.length) {\n          country[y] = letters;\n\n          if (!year[y]) {\n            year[y] = { ...allLetters };\n          }\n\n          letters.split(\"\").forEach((value) => {\n            year[y][value]++;\n          });\n        }\n      });\n    }\n  });\n\n  return { countries, year, years, lastYear };\n};\n\nconst parseFocusData = (data) => {\n  const rows = data.feed.entry;\n  const byCountry = {};\n\n  rows.forEach((row) => {\n    const id = getCol(row, \"countrycode\");\n    const letter = getCol(row, \"letter\");\n    const title = getCol(row, \"title\");\n    const body = getCol(row, \"body\");\n    const imageurl = getCol(row, \"imageurl\");\n    const imagelink = getCol(row, \"imagelink\");\n    const youtubeid = getCol(row, \"youtubeid\");\n    const readmorelink = getCol(row, \"readmorelink\");\n\n    if (!byCountry[id]) {\n      byCountry[id] = {};\n    }\n\n    byCountry[id][letter] = {\n      title,\n      body,\n      imageurl,\n      imagelink,\n      youtubeid,\n      readmorelink,\n    };\n  });\n\n  return byCountry;\n};\n\nconst fetchData = (sheet) =>\n  fetchJsonp(\n    `//spreadsheets.google.com/feeds/list/1Fd-vBoJPjp5wdCyJc7d_LOJPOg5uqdzVa3Eq5-VFR-g/${sheet}/public/values?alt=json-in-script`,\n    { jsonpCallback: \"callback\" }\n  ).then((response) => response.json());\n\nexport const getData = () => fetchData(1).then(parseData);\n\nexport const getFocusData = () => fetchData(2).then(parseFocusData);\n","import React from \"react\";\nimport SidebarToggle from \"./SidebarToggle\";\nimport Category from \"./Category\";\nimport { categories } from \"../utils/data\";\n\nconst Sidebar = ({ category, data, isDocked, onClose, onSelect }) => (\n  <>\n    {!isDocked && <SidebarToggle type=\"close\" onClick={onClose} />}\n    <div className=\"Sidebar-header\">\n      <h1>DHIS2 in action</h1>\n      <p>\n        DHIS2 is in use all over the world. Check out different use cases with\n        this interactive map.\n      </p>\n    </div>\n    {categories.map(item => (\n      <Category\n        key={item.id}\n        onClick={onSelect}\n        selected={category === item.id}\n        data={data}\n        {...item}\n      />\n    ))}\n  </>\n);\n\nexport default Sidebar;\n","import React, { useState, useEffect } from \"react\";\nimport ReactSidebar from \"react-sidebar\";\nimport SidebarContent from \"./SidebarContent\";\nimport SidebarToggle from \"./SidebarToggle\";\nimport \"./Sidebar.css\";\n\nconst App = ({ category, data, onSelect, children }) => {\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [sidebarDocked, setSidebarDocked] = useState(false);\n\n  useEffect(() => {\n    const mql = window.matchMedia(`(min-width: 700px)`);\n    mql.addListener(() => setSidebarDocked(mql.matches));\n    setSidebarDocked(mql.matches);\n  }, []);\n\n  return (\n    <ReactSidebar\n      sidebar={\n        <SidebarContent\n          category={category}\n          data={data}\n          onSelect={onSelect}\n          isDocked={sidebarDocked}\n          onClose={() => setSidebarOpen(false)}\n        />\n      }\n      open={sidebarOpen}\n      docked={sidebarDocked}\n      onSetOpen={() => setSidebarOpen(true)}\n      rootClassName=\"App\"\n      contentClassName=\"App-main\"\n      overlayClassName=\"App-overlay\"\n      sidebarClassName=\"Sidebar\"\n    >\n      {sidebarOpen && !sidebarDocked && (\n        <div className=\"App-mask\" onClick={() => setSidebarOpen(false)}></div>\n      )}\n      {children}\n      {!sidebarOpen && !sidebarDocked && (\n        <SidebarToggle type=\"open\" onClick={() => setSidebarOpen(true)} />\n      )}\n    </ReactSidebar>\n  );\n};\n\nexport default App;\n","import L, { GeoJSON } from \"leaflet\";\n\nconst Graticule = GeoJSON.extend({\n  options: {\n    style: {\n      color: \"#333\",\n      weight: 1\n    },\n    interval: 20\n  },\n\n  initialize(options) {\n    L.Util.setOptions(this, options);\n    this._layers = {};\n\n    if (this.options.sphere) {\n      this.addData(this._getFrame());\n    } else {\n      this.addData(this._getGraticule());\n    }\n  },\n\n  _getFrame() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        this._getMeridian(-180).concat(this._getMeridian(180).reverse())\n      ]\n    };\n  },\n\n  _getGraticule() {\n    var features = [],\n      interval = this.options.interval;\n\n    // Meridians\n    for (var lng = 0; lng <= 180; lng = lng + interval) {\n      features.push(\n        this._getFeature(this._getMeridian(lng), {\n          name: lng ? lng.toString() + \"° E\" : \"Prime meridian\"\n        })\n      );\n      if (lng !== 0) {\n        features.push(\n          this._getFeature(this._getMeridian(-lng), {\n            name: lng.toString() + \"° W\"\n          })\n        );\n      }\n    }\n\n    // Parallels\n    for (var lat = 0; lat <= 90; lat = lat + interval) {\n      features.push(\n        this._getFeature(this._getParallel(lat), {\n          name: lat ? lat.toString() + \"° N\" : \"Equator\"\n        })\n      );\n      if (lat !== 0) {\n        features.push(\n          this._getFeature(this._getParallel(-lat), {\n            name: lat.toString() + \"° S\"\n          })\n        );\n      }\n    }\n\n    return {\n      type: \"FeatureCollection\",\n      features: features\n    };\n  },\n\n  _getMeridian(lng) {\n    lng = this._lngFix(lng);\n    var coords = [];\n    for (var lat = -90; lat <= 90; lat++) {\n      coords.push([lng, lat]);\n    }\n    return coords;\n  },\n\n  _getParallel(lat) {\n    var coords = [];\n    for (var lng = -180; lng <= 180; lng++) {\n      coords.push([this._lngFix(lng), lat]);\n    }\n    return coords;\n  },\n\n  _getFeature(coords, prop) {\n    return {\n      type: \"Feature\",\n      geometry: {\n        type: \"LineString\",\n        coordinates: coords\n      },\n      properties: prop\n    };\n  },\n\n  _lngFix(lng) {\n    if (lng >= 180) return 179.999999;\n    if (lng <= -180) return -179.999999;\n    return lng;\n  }\n});\n\nexport default Graticule;\n","import area from \"@turf/area\";\nimport polylabel from \"polylabel\";\n\nexport const getIconPosition = ({ type, coordinates }) => {\n  let polygon = coordinates;\n\n  if (type === \"MultiPolygon\") {\n    const areas = coordinates.map((coords) =>\n      area({\n        type: \"Polygon\",\n        coordinates: coords,\n      })\n    );\n    const maxIndex = areas.indexOf(Math.max.apply(null, areas));\n    polygon = coordinates[maxIndex];\n  }\n\n  return polylabel(polygon, 0.1);\n};\n","import React, {\n  useState,\n  useRef,\n  useMemo,\n  useCallback,\n  useEffect,\n} from \"react\";\nimport { map, geoJSON, marker, icon, popup } from \"leaflet\";\nimport { CRS } from \"proj4leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport Graticule from \"../utils/graticule\";\nimport { categories } from \"../utils/data\";\nimport { getIconPosition } from \"../utils/map\";\nimport { getPopupContent } from \"../utils/popup\";\nimport \"./Map.css\";\n\nconst noDataColor = \"#fff\";\n\nconst bounds = [\n  [-40, -100],\n  [50, 165],\n];\n\nconst Map = ({ category, data, focus, selected, onClick }) => {\n  const [instance, setInstance] = useState();\n  const [layer, setLayer] = useState();\n  const container = useRef();\n\n  const legend = useMemo(\n    () => categories.find((c) => c.id === category).legend,\n    [category]\n  );\n\n  const onFeatureClick = useCallback(\n    ({ latlng, layer }) => {\n      const content = getPopupContent(layer.feature, data, focus, legend);\n      const { clientWidth, clientHeight } = container.current;\n      const maxWidth = clientWidth < 400 ? clientWidth - 100 : 300;\n      const maxHeight = clientHeight - 100;\n\n      popup({\n        maxWidth,\n        maxHeight,\n      })\n        .setLatLng(latlng)\n        .setContent(content)\n        .openOn(instance);\n\n      onClick(); // Clear previously clicked country\n    },\n    [instance, container, legend, data, focus, onClick]\n  );\n\n  const onPopupOpen = useCallback(\n    () => document.body.classList.add(\"popupopen\"),\n    []\n  );\n\n  const onPopupClose = useCallback(\n    () => document.body.classList.remove(\"popupopen\"),\n    []\n  );\n\n  useEffect(() => {\n    setInstance(\n      map(container.current, {\n        crs: new CRS(\n          \"ESRI:53009\",\n          \"+proj=moll +lon_0=0 +x_0=0 +y_0=0 +a=6371000 +b=6371000 +units=m +no_defs\",\n          {\n            resolutions: [50000, 40000, 30000, 20000, 10000, 5000, 2500, 1250],\n          }\n        ),\n        maxZoom: 7,\n      }).fitBounds(bounds)\n    );\n  }, [container]);\n\n  useEffect(() => {\n    if (instance) {\n      new Graticule({\n        sphere: true,\n        style: {\n          opacity: 0,\n          fillColor: \"#edf7ff\",\n          fillOpacity: 1,\n          clickable: false,\n        },\n      }).addTo(instance);\n\n      fetch(\"./countries_indian_states.json\")\n        .then((response) => response.json())\n        .then((features) => {\n          setLayer(\n            geoJSON(features, {\n              color: \"#555\",\n              weight: 1,\n              fillColor: noDataColor,\n              fillOpacity: 0.75,\n            }).addTo(instance)\n          );\n\n          instance.invalidateSize();\n        })\n        .catch((error) => console.log(error));\n    }\n  }, [instance, setLayer]);\n\n  useEffect(() => {\n    if (layer && legend && data) {\n      const { countries, lastYear } = data;\n\n      layer.eachLayer((item) =>\n        item.setStyle({\n          fillColor: noDataColor,\n        })\n      );\n\n      layer.eachLayer((item) => {\n        const code = item.feature.properties.CODE;\n\n        if (code && countries[code] && countries[code][lastYear]) {\n          const country = countries[code];\n          const letters = country[lastYear];\n\n          // Use name from Google Spreadsheet\n          item.feature.properties.NAME = country.name;\n\n          // India: show country or states\n          if (code === \"IN\") {\n            if (legend.some(({ code }) => letters.includes(code))) {\n              item.bringToFront();\n            } else {\n              item.bringToBack();\n            }\n          }\n\n          legend.forEach(({ code, color }) => {\n            if (letters.indexOf(code) !== -1) {\n              item.setStyle({\n                fillColor: color,\n              });\n            }\n          });\n        }\n      });\n    }\n  }, [layer, legend, data]);\n\n  useEffect(() => {\n    if (layer) {\n      layer.on(\"click\", onFeatureClick);\n    }\n    return () => {\n      if (layer) {\n        layer.off(\"click\", onFeatureClick);\n      }\n    };\n  }, [layer, data, focus, onFeatureClick]);\n\n  useEffect(() => {\n    if (instance && layer && legend && focus) {\n      let infoLayer;\n\n      const features = layer\n        .getLayers()\n        .filter(({ feature }) => {\n          const code = feature.properties.CODE;\n          return focus[code] && legend.some((l) => focus[code][l.code]);\n        })\n        .map(({ feature }) => ({\n          ...feature,\n          geometry: {\n            type: \"Point\",\n            coordinates: getIconPosition(feature.geometry),\n          },\n        }));\n\n      if (features.length) {\n        const markerOptions = {\n          icon: icon({\n            iconUrl: \"icon-info-48.png\",\n            iconSize: [20, 20],\n          }),\n        };\n\n        infoLayer = geoJSON(features, {\n          pointToLayer: (feature, latlng) => marker(latlng, markerOptions),\n        }).on(\"click\", onFeatureClick);\n\n        instance.addLayer(infoLayer);\n\n        return () => {\n          if (infoLayer) {\n            infoLayer.off(\"click\", onFeatureClick);\n            instance.removeLayer(infoLayer);\n          }\n        };\n      }\n    }\n  }, [instance, layer, legend, focus, data, onFeatureClick]);\n\n  useEffect(() => {\n    if (selected && layer) {\n      const selectedLayer = layer\n        .getLayers()\n        .find((l) => l.feature.properties.NAME === selected);\n\n      if (selectedLayer) {\n        onFeatureClick({\n          layer: selectedLayer,\n          latlng: getIconPosition(selectedLayer.feature.geometry).reverse(),\n        });\n      }\n    }\n  }, [selected, layer, onFeatureClick]);\n\n  useEffect(() => {\n    if (instance) {\n      instance.on(\"popupopen\", onPopupOpen);\n      instance.on(\"popupclose\", onPopupClose);\n    }\n\n    return () => {\n      if (instance) {\n        instance.off(\"popupopen\", onPopupOpen);\n        instance.off(\"popupclose\", onPopupClose);\n      }\n    };\n  }, [instance, onPopupOpen, onPopupClose]);\n\n  return <div ref={container} className=\"Map\"></div>;\n};\n\nexport default Map;\n","export const getPopupContent = (feature, data, focus, legend) => {\n  const { CODE, NAME } = feature.properties;\n  const country = data.countries[CODE];\n  let content = `<h2>${NAME}</h2>`;\n\n  if (country) {\n    const countryFocus = focus && focus[CODE];\n\n    const items = legend\n      .map((i) => ({\n        ...i,\n        year: data.years.find((y) => country[y] && country[y].includes(i.code)),\n      }))\n      .filter((i) => i.year);\n\n    if (!countryFocus) {\n      content += items\n        .map(\n          ({ name, year }) =>\n            `${\n              name.includes(\"National\")\n                ? CODE.includes(\"-\")\n                  ? \"State\"\n                  : \"National\"\n                : name\n            }: ${year}`\n        )\n        .join(\"<br/>\");\n    } else {\n      const letter = items.map((i) => i.code).find((l) => !!countryFocus[l]);\n\n      if (letter) {\n        const {\n          title,\n          body,\n          imageurl,\n          imagelink,\n          youtubeid,\n          readmorelink,\n        } = countryFocus[letter];\n\n        content += `<h3>${title}</h3>${body}`;\n\n        if (youtubeid) {\n          content += `<div class=\"aspect-ratio\"><iframe src=\"https://www.youtube.com/embed/${youtubeid}\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>`;\n        } else if (imageurl) {\n          content += `${\n            imageurl\n              ? `${\n                  imagelink ? `<a href=\"${imagelink}\" target=\"_blank\">` : \"\"\n                }<img src=\"${imageurl}\" />${imagelink ? `</a>` : \"\"}`\n              : \"\"\n          }`;\n        }\n\n        if (readmorelink) {\n          content += `<p><a href=\"${readmorelink}\" target=\"_blank\">Learn more</a></p>`;\n        }\n      }\n    }\n  }\n\n  return content;\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { chart } from \"highcharts\";\nimport { categories } from \"../utils/data\";\nimport \"./Chart.css\";\n\nconst Chart = ({ category, data, show }) => {\n  const [instance, setInstance] = useState();\n  const container = useRef();\n\n  useEffect(() => {\n    setInstance(\n      chart(\"chart\", {\n        chart: {\n          type: \"area\",\n          marginTop: 4,\n        },\n        title: {\n          text: null, // 'Countries using DHIS 2'\n        },\n        xAxis: {\n          tickmarkPlacement: \"on\",\n          title: {\n            enabled: false,\n          },\n        },\n        yAxis: {\n          title: {\n            text: \"Countries using DHIS2\",\n          },\n        },\n        tooltip: {\n          split: true,\n        },\n        plotOptions: {\n          area: {\n            stacking: \"normal\",\n            lineColor: \"#666666\",\n            lineWidth: 1,\n            marker: {\n              lineWidth: 1,\n              lineColor: \"#666666\",\n            },\n          },\n        },\n        series: [],\n        legend: {\n          enabled: false,\n        },\n      })\n    );\n  }, [container]);\n\n  useEffect(() => {\n    if ((instance, category, data)) {\n      const { series, xAxis, yAxis } = instance;\n      const { title, legend } = categories.find((c) => c.id === category);\n      const { years, year } = data;\n\n      instance.reflow();\n\n      const yearRange = years.slice(\n        years.findIndex((y) => legend.some(({ code }) => year[y][code]))\n      );\n\n      while (series.length) {\n        series[0].remove();\n      }\n\n      xAxis[0].setCategories(yearRange);\n      yAxis[0].setTitle({ text: `${title} implementations` });\n\n      legend\n        .slice()\n        .reverse()\n        .forEach(({ code, name, color }) =>\n          instance.addSeries({\n            name: name,\n            data: yearRange.map((y) => year[y][code]),\n            color: color,\n          })\n        );\n    }\n  }, [instance, category, data]);\n\n  useEffect(() => {\n    if (instance && show) {\n      instance.reflow();\n    }\n  }, [instance, show]);\n\n  return (\n    <div\n      id=\"chart\"\n      ref={container}\n      className={`Chart Chart-${show ? \"show\" : \"hide\"}`}\n    ></div>\n  );\n};\n\nexport default Chart;\n","import React, {\n  useRef,\n  useState,\n  useMemo,\n  useCallback,\n  useEffect,\n} from \"react\";\nimport { categories } from \"../utils/data\";\nimport \"./List.css\";\n\nconst marginTop = 70;\nconst marginBottom = 20;\n\nconst List = ({ category, data, show, focus, onClick }) => {\n  const container = useRef();\n  const [cols, setCols] = useState(null);\n\n  const legend = useMemo(\n    () => categories.find((c) => c.id === category).legend,\n    [category]\n  );\n\n  const lists = useMemo(() => {\n    if (legend && data) {\n      const { countries, lastYear } = data;\n\n      setCols(null);\n\n      return legend.map(({ code, name, color }) => ({\n        name,\n        color,\n        items: Object.values(countries)\n          .filter((country) => {\n            const letters = country[lastYear];\n            return letters && letters.indexOf(code) !== -1;\n          }, [])\n          .map((c) => c.name)\n          .sort(),\n        focus: (focus\n          ? Object.keys(countries).filter((id) => focus[id] && focus[id][code])\n          : []\n        ).map((id) => countries[id].name),\n      }));\n    }\n  }, [legend, data, focus]);\n\n  const onResize = useCallback(() => {\n    if (lists && container.current) {\n      const { clientHeight } = container.current;\n      const count = Math.floor((clientHeight - marginTop - marginBottom) / 20);\n      const cols = lists.map(({ items }) => Math.ceil(items.length / count));\n\n      setCols(cols);\n    }\n  }, [container, lists]);\n\n  useEffect(() => {\n    if (show) {\n      window.addEventListener(\"resize\", onResize);\n      onResize();\n    }\n    return () => window.removeEventListener(\"resize\", onResize);\n  }, [show, onResize]);\n\n  return (\n    <div\n      id=\"list\"\n      ref={container}\n      className={`List List-${show ? \"show\" : \"hide\"}`}\n    >\n      <div className=\"container\">\n        {cols &&\n          lists &&\n          lists.map(({ name, color, items, focus }, index) => {\n            const numCols = cols[index];\n\n            return (\n              <div\n                key={name}\n                className=\"section\"\n                style={{\n                  flexGrow: numCols,\n                  flexShrink: numCols,\n                }}\n              >\n                <h2>\n                  <span style={{ backgroundColor: color }}></span>\n                  {name}: {items.length}\n                </h2>\n                <ul\n                  style={{\n                    columnCount: numCols,\n                  }}\n                >\n                  {items.map((name) => (\n                    <li key={name} onClick={() => onClick(name)}>\n                      {name}\n                      {focus.includes(name) ? (\n                        <img src=\"icon-info-48.png\" alt=\"More information\" />\n                      ) : (\n                        \"\"\n                      )}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useState } from \"react\";\nimport Chart from \"./Chart\";\nimport List from \"./List\";\nimport { categories } from \"../utils/data\";\nimport \"./ChartList.css\";\n\nconst ChartListToggle = ({ category, data, focus, onClick }) => {\n  const [showChart, setShowChart] = useState(true);\n  const { hasChart } = categories.find((c) => c.id === category);\n\n  return (\n    <div className=\"ChartList\">\n      <div className=\"menu\">\n        {hasChart && (\n          <div className=\"toggle\" onClick={() => setShowChart(!showChart)}>\n            {showChart\n              ? \"View list of implementations\"\n              : \"View chart of adoption over time\"}\n          </div>\n        )}\n      </div>\n      <div className=\"wrapper\" style={{ top: hasChart ? 30 : 5 }}>\n        <Chart category={category} data={data} show={hasChart && showChart} />\n        <List\n          category={category}\n          data={data}\n          show={!showChart || !hasChart}\n          focus={focus}\n          onClick={onClick}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ChartListToggle;\n","import React, { useState, useEffect } from \"react\";\nimport Fullscreen from \"./components/Fullscreen\";\nimport Sidebar from \"./components/Sidebar\";\nimport Map from \"./components/Map\";\nimport ChartList from \"./components/ChartList\";\nimport { categories, getData, getFocusData } from \"./utils/data\";\nimport \"./App.css\";\n\nconst getInitialCategory = () => {\n  const { hash } = window.location;\n\n  if (hash) {\n    const cat = hash.substr(1);\n\n    if (categories.find((c) => c.id === cat)) {\n      return cat;\n    }\n  }\n\n  return \"health\"; // Default category\n};\n\nconst App = () => {\n  const [category, setCategory] = useState(getInitialCategory());\n  const [data, setData] = useState();\n  const [focus, setFocus] = useState();\n  const [selected, setSelected] = useState();\n\n  useEffect(() => {\n    getData().then(setData);\n  }, []);\n\n  // Load country focus after main data is loaded\n  useEffect(() => {\n    if (data) {\n      getFocusData().then(setFocus);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    window.location.hash = `#${category}`;\n    setSelected();\n  }, [category]);\n\n  return (\n    <Fullscreen>\n      <Sidebar category={category} data={data} onSelect={setCategory}>\n        <Map\n          category={category}\n          data={data}\n          focus={focus}\n          selected={selected}\n          onClick={setSelected}\n        />\n        <ChartList\n          category={category}\n          data={data}\n          focus={focus}\n          onClick={setSelected}\n        />\n      </Sidebar>\n    </Fullscreen>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"core-js/features/string/starts-with\"; // IE 11 support\nimport \"core-js/features/string/includes\"; // IE 11 support\nimport \"core-js/features/array/includes\"; // IE 11 support\nimport \"core-js/features/array/flat-map\"; // IE 11 support\nimport \"core-js/features/array/find\"; // IE 11 support\nimport \"core-js/features/array/find-index\"; // IE 11 support\nimport \"core-js/features/object/assign\"; // IE 11 support\nimport \"core-js/features/object/values\"; // IE 11 support\nimport \"core-js/features/promise\"; // IE 11 support\nimport \"unfetch/polyfill\"; // IE 11 support\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}