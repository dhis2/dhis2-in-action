{"version":3,"sources":["components/Fullscreen.js","components/SidebarToggle.js","components/Legend.js","components/Category.js","utils/data.js","components/SidebarContent.js","components/Sidebar.js","utils/graticule.js","utils/map.js","components/Map.js","utils/popup.js","components/Chart.js","components/List.js","components/ChartList.js","App.js","serviceWorker.js","index.js"],"names":["Fullscreen","children","useState","isFullscreen","setFullscreen","enabled","onChange","className","onClick","SidebarToggle","type","Legend","items","data","count","useMemo","year","lastYear","map","code","name","color","key","style","backgroundColor","Category","id","title","legend","selected","categories","hasChart","allLetters","flatMap","c","reduce","obj","isYear","parseData","values","cols","idx","indexOf","namex","years","filter","match","substring","length","rows","slice","countries","skip","forEach","row","country","y","letters","startsWith","replace","split","value","parseFocusData","letterx","titlex","bodyx","imageurlx","imagelinkx","youtubeidx","readmorelinkx","byCountry","letter","body","imageurl","imagelink","youtubeid","readmorelink","fetchData","sheet","fetchJsonp","jsonpCallback","then","response","json","Sidebar","category","isDocked","onClose","onSelect","item","App","sidebarOpen","setSidebarOpen","sidebarDocked","setSidebarDocked","useEffect","mql","window","matchMedia","addListener","matches","sidebar","SidebarContent","open","docked","onSetOpen","rootClassName","contentClassName","overlayClassName","sidebarClassName","Graticule","GeoJSON","extend","options","weight","interval","initialize","L","Util","setOptions","this","_layers","sphere","addData","_getFrame","_getGraticule","coordinates","_getMeridian","concat","reverse","features","lng","push","_getFeature","toString","lat","_getParallel","_lngFix","coords","prop","geometry","properties","getIconPosition","polygon","areas","area","Math","max","apply","polylabel","bounds","Map","focus","instance","setInstance","layer","setLayer","container","useRef","find","onFeatureClick","useCallback","latlng","content","feature","CODE","NAME","countryFocus","i","includes","l","join","getPopupContent","current","clientWidth","maxWidth","maxHeight","clientHeight","popup","setLatLng","setContent","openOn","onPopupOpen","document","classList","add","onPopupClose","remove","crs","CRS","resolutions","maxZoom","fitBounds","opacity","fillColor","fillOpacity","clickable","addTo","fetch","geoJSON","invalidateSize","catch","error","console","log","eachLayer","setStyle","some","bringToFront","bringToBack","on","off","infoLayer","getLayers","markerOptions","icon","iconUrl","iconSize","pointToLayer","marker","addLayer","removeLayer","selectedLayer","ref","Chart","show","chart","marginTop","text","xAxis","tickmarkPlacement","yAxis","tooltip","plotOptions","stacking","lineColor","lineWidth","series","reflow","yearRange","findIndex","setCategories","setTitle","addSeries","List","setCols","lists","Object","sort","keys","onResize","floor","ceil","addEventListener","removeEventListener","index","numCols","flexGrow","flexShrink","columnCount","src","alt","ChartListToggle","showChart","setShowChart","top","hash","location","cat","substr","getInitialCategory","setCategory","setData","setFocus","setSelected","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.361ac16f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport ReactFullscreen from \"react-full-screen\";\nimport \"./Fullscreen.css\";\n\nconst Fullscreen = ({ children }) => {\n  const [isFullscreen, setFullscreen] = useState(false);\n\n  return (\n    <ReactFullscreen enabled={isFullscreen} onChange={setFullscreen}>\n      {children}\n      <div\n        className={`Fullscreen Fullscreen-${isFullscreen ? \"en\" : \"dis\"}abled`}\n        onClick={() => setFullscreen(!isFullscreen)}\n      />\n    </ReactFullscreen>\n  );\n};\n\nexport default Fullscreen;\n","import React from \"react\";\nimport \"./SidebarToggle.css\";\n\nconst SidebarToggle = ({ type, onClick }) => (\n  <div className={`SidebarToggle SidebarToggle-${type}`} onClick={onClick}>\n    {type === \"open\" ? (\n      <>\n        Map options<span>&gt;</span>\n      </>\n    ) : (\n      <>\n        <span>&lt;</span>Close map options\n      </>\n    )}\n  </div>\n);\n\nexport default SidebarToggle;\n","import React, { useMemo } from \"react\";\nimport \"./Legend.css\";\n\nconst Legend = ({ items, data }) => {\n  const count = useMemo(() => (data ? data.year[data.lastYear] : {}), [data]);\n\n  return (\n    <div className=\"Legend\">\n      {items.map(({ code, name, color }) => (\n        <div key={code}>\n          <span style={{ backgroundColor: color }}></span> {name} ({count[code]}\n          )\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Legend;\n","import React from \"react\";\nimport Legend from \"./Legend\";\nimport \"./Category.css\";\n\nconst Category = ({ id, title, legend, selected, data, onClick }) => (\n  <div\n    onClick={() => onClick(id)}\n    className={`Category${selected ? \" Category-selected\" : \"\"}`}\n  >\n    <h2>{title}</h2>\n    {selected && <Legend items={legend} data={data} />}\n  </div>\n);\n\nexport default Category;\n","import fetchJsonp from \"fetch-jsonp\";\n\nexport const categories = [\n  {\n    id: \"health\",\n    title: \"Health Information System\",\n    legend: [\n      { code: \"s\", name: \"National\", color: \"#238443\" },\n      { code: \"i\", name: \"Indian State\", color: \"#78c679\" },\n      { code: \"p\", name: \"Pilot\", color: \"#d9f0a3\" },\n    ],\n    hasChart: true,\n  },\n  {\n    id: \"covid-19\",\n    title: \"COVID-19 Surveillance\",\n    legend: [\n      { code: \"c\", name: \"Operational\", color: \"#d95f0e\" },\n      { code: \"v\", name: \"In development\", color: \"#fec44f\" },\n    ],\n    hasChart: false,\n  },\n  {\n    id: \"covid-19-vaccine\",\n    title: \"COVID-19 Vaccine\",\n    legend: [\n      { code: \"x\", name: \"Operational\", color: \"#7D2BA2\" },\n      { code: \"z\", name: \"In development\", color: \"#D098EB\" },\n    ],\n    hasChart: false,\n  },\n  {\n    id: \"tracker\",\n    title: \"Tracker\",\n    legend: [{ code: \"t\", name: \"Tracker\", color: \"#e34a33\" }],\n    hasChart: true,\n  },\n  {\n    id: \"android\",\n    title: \"Android app\",\n    legend: [{ code: \"a\", name: \"Android app\", color: \"#2ca25f\" }],\n    hasChart: true,\n  },\n  {\n    id: \"who\",\n    title: \"WHO Packages\",\n    legend: [{ code: \"w\", name: \"WHO Packages\", color: \"#1d91c0\" }],\n    hasChart: false,\n  },\n  {\n    id: \"emis\",\n    title: \"Education Management Information System (EMIS)\",\n    legend: [{ code: \"e\", name: \"DHIS2 for Education\", color: \"#ae017e\" }],\n    hasChart: false,\n  },\n];\n\nconst allLetters = categories\n  .flatMap((c) => c.legend)\n  .reduce((obj, { code }) => ({ ...obj, [code]: 0 }), {});\n\nconst isYear = /^Y\\d{4}$/;\n\nconst parseData = ({ values }) => {\n  const cols = values[0];\n  const idx = cols.indexOf(\"Code\");\n  const namex = cols.indexOf(\"Name\");\n  const years = cols.filter((c) => c.match(isYear)).map((c) => c.substring(1));\n  const lastYear = years[years.length - 1];\n  const rows = values.slice(1);\n  const countries = {};\n  const year = {};\n  let skip = false;\n\n  rows.forEach((row) => {\n    const id = row[idx];\n    const name = row[namex];\n\n    // Loop until first empty id\n    if (!id) {\n      skip = true;\n    }\n\n    if (id && !skip) {\n      const country = (countries[id] = {\n        name: name,\n      });\n\n      years.forEach((y) => {\n        let letters = row[cols.indexOf(`Y${y}`)];\n\n        if (letters) {\n          // Remove and fix in google spreadsheet\n          if (id.startsWith(\"IN-\")) {\n            // s/p is not valid for indian states\n            letters = letters.replace(\"s\", \"\").replace(\"p\", \"\");\n          }\n\n          if (letters.length) {\n            country[y] = letters;\n\n            if (!year[y]) {\n              year[y] = { ...allLetters };\n            }\n\n            letters.split(\"\").forEach((value) => {\n              year[y][value]++;\n            });\n          }\n        }\n      });\n    }\n  });\n\n  return { countries, year, years, lastYear };\n};\n\nconst parseFocusData = ({ values }) => {\n  const cols = values[0];\n  const rows = values.slice(1);\n  const idx = cols.indexOf(\"Country code\");\n  const letterx = cols.indexOf(\"Letter\");\n  const titlex = cols.indexOf(\"Title\");\n  const bodyx = cols.indexOf(\"Body\");\n  const imageurlx = cols.indexOf(\"Image url\");\n  const imagelinkx = cols.indexOf(\"Image link\");\n  const youtubeidx = cols.indexOf(\"YouTube ID\");\n  const readmorelinkx = cols.indexOf(\"Read more link\");\n  const byCountry = {};\n\n  rows.forEach((row) => {\n    const id = row[idx];\n    const letter = row[letterx];\n    const title = row[titlex];\n    const body = row[bodyx];\n    const imageurl = row[imageurlx];\n    const imagelink = row[imagelinkx];\n    const youtubeid = row[youtubeidx];\n    const readmorelink = row[readmorelinkx];\n\n    if (!byCountry[id]) {\n      byCountry[id] = {};\n    }\n\n    byCountry[id][letter] = {\n      title,\n      body,\n      imageurl,\n      imagelink,\n      youtubeid,\n      readmorelink,\n    };\n  });\n\n  return byCountry;\n};\n\nconst fetchData = (sheet) =>\n  fetchJsonp(\n    `https://sheets.googleapis.com/v4/spreadsheets/1Fd-vBoJPjp5wdCyJc7d_LOJPOg5uqdzVa3Eq5-VFR-g/values/${sheet}?key=AIzaSyDWyCSemDgAxocSL7j9Dy4mi93xTTcPEek`,\n    { jsonpCallback: \"callback\" }\n  ).then((response) => response.json());\n\nexport const getData = () =>\n  fetchData(\"Country status per year\").then(parseData);\n\nexport const getFocusData = () =>\n  fetchData(\"Country focus\").then(parseFocusData);\n","import React from \"react\";\nimport SidebarToggle from \"./SidebarToggle\";\nimport Category from \"./Category\";\nimport { categories } from \"../utils/data\";\n\nconst Sidebar = ({ category, data, isDocked, onClose, onSelect }) => (\n  <>\n    {!isDocked && <SidebarToggle type=\"close\" onClick={onClose} />}\n    <div className=\"Sidebar-header\">\n      <h1>DHIS2 in action</h1>\n      <p>\n        DHIS2 is in use all over the world. Check out different use cases with\n        this interactive map.\n      </p>\n    </div>\n    {categories.map(item => (\n      <Category\n        key={item.id}\n        onClick={onSelect}\n        selected={category === item.id}\n        data={data}\n        {...item}\n      />\n    ))}\n  </>\n);\n\nexport default Sidebar;\n","import React, { useState, useEffect } from \"react\";\nimport ReactSidebar from \"react-sidebar\";\nimport SidebarContent from \"./SidebarContent\";\nimport SidebarToggle from \"./SidebarToggle\";\nimport \"./Sidebar.css\";\n\nconst App = ({ category, data, onSelect, children }) => {\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [sidebarDocked, setSidebarDocked] = useState(false);\n\n  useEffect(() => {\n    const mql = window.matchMedia(`(min-width: 700px)`);\n    mql.addListener(() => setSidebarDocked(mql.matches));\n    setSidebarDocked(mql.matches);\n  }, []);\n\n  return (\n    <ReactSidebar\n      sidebar={\n        <SidebarContent\n          category={category}\n          data={data}\n          onSelect={onSelect}\n          isDocked={sidebarDocked}\n          onClose={() => setSidebarOpen(false)}\n        />\n      }\n      open={sidebarOpen}\n      docked={sidebarDocked}\n      onSetOpen={() => setSidebarOpen(true)}\n      rootClassName=\"App\"\n      contentClassName=\"App-main\"\n      overlayClassName=\"App-overlay\"\n      sidebarClassName=\"Sidebar\"\n    >\n      {sidebarOpen && !sidebarDocked && (\n        <div className=\"App-mask\" onClick={() => setSidebarOpen(false)}></div>\n      )}\n      {children}\n      {!sidebarOpen && !sidebarDocked && (\n        <SidebarToggle type=\"open\" onClick={() => setSidebarOpen(true)} />\n      )}\n    </ReactSidebar>\n  );\n};\n\nexport default App;\n","import L, { GeoJSON } from \"leaflet\";\n\nconst Graticule = GeoJSON.extend({\n  options: {\n    style: {\n      color: \"#333\",\n      weight: 1\n    },\n    interval: 20\n  },\n\n  initialize(options) {\n    L.Util.setOptions(this, options);\n    this._layers = {};\n\n    if (this.options.sphere) {\n      this.addData(this._getFrame());\n    } else {\n      this.addData(this._getGraticule());\n    }\n  },\n\n  _getFrame() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        this._getMeridian(-180).concat(this._getMeridian(180).reverse())\n      ]\n    };\n  },\n\n  _getGraticule() {\n    var features = [],\n      interval = this.options.interval;\n\n    // Meridians\n    for (var lng = 0; lng <= 180; lng = lng + interval) {\n      features.push(\n        this._getFeature(this._getMeridian(lng), {\n          name: lng ? lng.toString() + \"° E\" : \"Prime meridian\"\n        })\n      );\n      if (lng !== 0) {\n        features.push(\n          this._getFeature(this._getMeridian(-lng), {\n            name: lng.toString() + \"° W\"\n          })\n        );\n      }\n    }\n\n    // Parallels\n    for (var lat = 0; lat <= 90; lat = lat + interval) {\n      features.push(\n        this._getFeature(this._getParallel(lat), {\n          name: lat ? lat.toString() + \"° N\" : \"Equator\"\n        })\n      );\n      if (lat !== 0) {\n        features.push(\n          this._getFeature(this._getParallel(-lat), {\n            name: lat.toString() + \"° S\"\n          })\n        );\n      }\n    }\n\n    return {\n      type: \"FeatureCollection\",\n      features: features\n    };\n  },\n\n  _getMeridian(lng) {\n    lng = this._lngFix(lng);\n    var coords = [];\n    for (var lat = -90; lat <= 90; lat++) {\n      coords.push([lng, lat]);\n    }\n    return coords;\n  },\n\n  _getParallel(lat) {\n    var coords = [];\n    for (var lng = -180; lng <= 180; lng++) {\n      coords.push([this._lngFix(lng), lat]);\n    }\n    return coords;\n  },\n\n  _getFeature(coords, prop) {\n    return {\n      type: \"Feature\",\n      geometry: {\n        type: \"LineString\",\n        coordinates: coords\n      },\n      properties: prop\n    };\n  },\n\n  _lngFix(lng) {\n    if (lng >= 180) return 179.999999;\n    if (lng <= -180) return -179.999999;\n    return lng;\n  }\n});\n\nexport default Graticule;\n","import area from \"@turf/area\";\nimport polylabel from \"polylabel\";\n\nexport const getIconPosition = ({ type, coordinates }) => {\n  let polygon = coordinates;\n\n  if (type === \"MultiPolygon\") {\n    const areas = coordinates.map((coords) =>\n      area({\n        type: \"Polygon\",\n        coordinates: coords,\n      })\n    );\n    const maxIndex = areas.indexOf(Math.max.apply(null, areas));\n    polygon = coordinates[maxIndex];\n  }\n\n  return polylabel(polygon, 0.1);\n};\n","import React, {\n  useState,\n  useRef,\n  useMemo,\n  useCallback,\n  useEffect,\n} from \"react\";\nimport { map, geoJSON, marker, icon, popup } from \"leaflet\";\nimport { CRS } from \"proj4leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport Graticule from \"../utils/graticule\";\nimport { categories } from \"../utils/data\";\nimport { getIconPosition } from \"../utils/map\";\nimport { getPopupContent } from \"../utils/popup\";\nimport \"./Map.css\";\n\nconst noDataColor = \"#fff\";\n\nconst bounds = [\n  [-40, -100],\n  [50, 165],\n];\n\nconst Map = ({ category, data, focus, selected, onClick }) => {\n  const [instance, setInstance] = useState();\n  const [layer, setLayer] = useState();\n  const container = useRef();\n\n  const legend = useMemo(\n    () => categories.find((c) => c.id === category).legend,\n    [category]\n  );\n\n  const onFeatureClick = useCallback(\n    ({ latlng, layer }) => {\n      const content = getPopupContent(layer.feature, data, focus, legend);\n      const { clientWidth, clientHeight } = container.current;\n      const maxWidth = clientWidth < 400 ? clientWidth - 100 : 300;\n      const maxHeight = clientHeight - 100;\n\n      popup({\n        maxWidth,\n        maxHeight,\n      })\n        .setLatLng(latlng)\n        .setContent(content)\n        .openOn(instance);\n\n      onClick(); // Clear previously clicked country\n    },\n    [instance, container, legend, data, focus, onClick]\n  );\n\n  const onPopupOpen = useCallback(\n    () => document.body.classList.add(\"popupopen\"),\n    []\n  );\n\n  const onPopupClose = useCallback(\n    () => document.body.classList.remove(\"popupopen\"),\n    []\n  );\n\n  useEffect(() => {\n    setInstance(\n      map(container.current, {\n        crs: new CRS(\n          \"ESRI:53009\",\n          \"+proj=moll +lon_0=0 +x_0=0 +y_0=0 +a=6371000 +b=6371000 +units=m +no_defs\",\n          {\n            resolutions: [50000, 40000, 30000, 20000, 10000, 5000, 2500, 1250],\n          }\n        ),\n        maxZoom: 7,\n      }).fitBounds(bounds)\n    );\n  }, [container]);\n\n  useEffect(() => {\n    if (instance) {\n      new Graticule({\n        sphere: true,\n        style: {\n          opacity: 0,\n          fillColor: \"#edf7ff\",\n          fillOpacity: 1,\n          clickable: false,\n        },\n      }).addTo(instance);\n\n      fetch(\"./countries_indian_states.json\")\n        .then((response) => response.json())\n        .then((features) => {\n          setLayer(\n            geoJSON(features, {\n              color: \"#555\",\n              weight: 1,\n              fillColor: noDataColor,\n              fillOpacity: 0.75,\n            }).addTo(instance)\n          );\n\n          instance.invalidateSize();\n        })\n        .catch((error) => console.log(error));\n    }\n  }, [instance, setLayer]);\n\n  useEffect(() => {\n    if (layer && legend && data) {\n      const { countries, lastYear } = data;\n\n      layer.eachLayer((item) =>\n        item.setStyle({\n          fillColor: noDataColor,\n        })\n      );\n\n      layer.eachLayer((item) => {\n        const code = item.feature.properties.CODE;\n\n        if (code && countries[code] && countries[code][lastYear]) {\n          const country = countries[code];\n          const letters = country[lastYear];\n\n          // Use name from Google Spreadsheet\n          item.feature.properties.NAME = country.name;\n\n          // India: show country or states\n          if (code === \"IN\") {\n            if (legend.some(({ code }) => letters.includes(code))) {\n              item.bringToFront();\n            } else {\n              item.bringToBack();\n            }\n          }\n\n          legend.forEach(({ code, color }) => {\n            if (letters.indexOf(code) !== -1) {\n              item.setStyle({\n                fillColor: color,\n              });\n            }\n          });\n        }\n      });\n    }\n  }, [layer, legend, data]);\n\n  useEffect(() => {\n    if (layer) {\n      layer.on(\"click\", onFeatureClick);\n    }\n    return () => {\n      if (layer) {\n        layer.off(\"click\", onFeatureClick);\n      }\n    };\n  }, [layer, data, focus, onFeatureClick]);\n\n  useEffect(() => {\n    if (instance && layer && legend && focus) {\n      let infoLayer;\n\n      const features = layer\n        .getLayers()\n        .filter(({ feature }) => {\n          const code = feature.properties.CODE;\n          return focus[code] && legend.some((l) => focus[code][l.code]);\n        })\n        .map(({ feature }) => ({\n          ...feature,\n          geometry: {\n            type: \"Point\",\n            coordinates: getIconPosition(feature.geometry),\n          },\n        }));\n\n      if (features.length) {\n        const markerOptions = {\n          icon: icon({\n            iconUrl: \"icon-info-48.png\",\n            iconSize: [20, 20],\n          }),\n        };\n\n        infoLayer = geoJSON(features, {\n          pointToLayer: (feature, latlng) => marker(latlng, markerOptions),\n        }).on(\"click\", onFeatureClick);\n\n        instance.addLayer(infoLayer);\n\n        return () => {\n          if (infoLayer) {\n            infoLayer.off(\"click\", onFeatureClick);\n            instance.removeLayer(infoLayer);\n          }\n        };\n      }\n    }\n  }, [instance, layer, legend, focus, data, onFeatureClick]);\n\n  useEffect(() => {\n    if (selected && layer) {\n      const selectedLayer = layer\n        .getLayers()\n        .find((l) => l.feature.properties.NAME === selected);\n\n      if (selectedLayer) {\n        onFeatureClick({\n          layer: selectedLayer,\n          latlng: getIconPosition(selectedLayer.feature.geometry).reverse(),\n        });\n      }\n    }\n  }, [selected, layer, onFeatureClick]);\n\n  useEffect(() => {\n    if (instance) {\n      instance.on(\"popupopen\", onPopupOpen);\n      instance.on(\"popupclose\", onPopupClose);\n    }\n\n    return () => {\n      if (instance) {\n        instance.off(\"popupopen\", onPopupOpen);\n        instance.off(\"popupclose\", onPopupClose);\n      }\n    };\n  }, [instance, onPopupOpen, onPopupClose]);\n\n  return <div ref={container} className=\"Map\"></div>;\n};\n\nexport default Map;\n","export const getPopupContent = (feature, data, focus, legend) => {\n  const { CODE, NAME } = feature.properties;\n  const country = data.countries[CODE];\n  let content = `<h2>${NAME}</h2>`;\n\n  if (country) {\n    const countryFocus = focus && focus[CODE];\n\n    const items = legend\n      .map((i) => ({\n        ...i,\n        year: data.years.find((y) => country[y] && country[y].includes(i.code)),\n      }))\n      .filter((i) => i.year);\n\n    const letter =\n      countryFocus && items.map((i) => i.code).find((l) => !!countryFocus[l]);\n\n    if (letter) {\n      const { title, body, imageurl, imagelink, youtubeid, readmorelink } =\n        countryFocus[letter];\n\n      content += `<h3>${title}</h3>${body}`;\n\n      if (youtubeid) {\n        content += `<div class=\"aspect-ratio\"><iframe src=\"https://www.youtube.com/embed/${youtubeid}\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>`;\n      } else if (imageurl) {\n        content += `${\n          imageurl\n            ? `${\n                imagelink ? `<a href=\"${imagelink}\" target=\"_blank\">` : \"\"\n              }<img src=\"${imageurl}\" />${imagelink ? `</a>` : \"\"}`\n            : \"\"\n        }`;\n      }\n\n      if (readmorelink) {\n        content += `<p><a href=\"${readmorelink}\" target=\"_blank\">Learn more</a></p>`;\n      }\n    } else {\n      content += items\n        .map(\n          ({ name, year }) =>\n            `${\n              name.includes(\"National\")\n                ? CODE.includes(\"-\")\n                  ? \"State\"\n                  : \"National\"\n                : name\n            }: ${year}`\n        )\n        .join(\"<br/>\");\n    }\n  }\n\n  return content;\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { chart } from \"highcharts\";\nimport { categories } from \"../utils/data\";\nimport \"./Chart.css\";\n\nconst Chart = ({ category, data, show }) => {\n  const [instance, setInstance] = useState();\n  const container = useRef();\n\n  useEffect(() => {\n    setInstance(\n      chart(\"chart\", {\n        chart: {\n          type: \"area\",\n          marginTop: 4,\n        },\n        title: {\n          text: null, // 'Countries using DHIS 2'\n        },\n        xAxis: {\n          tickmarkPlacement: \"on\",\n          title: {\n            enabled: false,\n          },\n        },\n        yAxis: {\n          title: {\n            text: \"Countries using DHIS2\",\n          },\n        },\n        tooltip: {\n          split: true,\n        },\n        plotOptions: {\n          area: {\n            stacking: \"normal\",\n            lineColor: \"#666666\",\n            lineWidth: 1,\n            marker: {\n              lineWidth: 1,\n              lineColor: \"#666666\",\n            },\n          },\n        },\n        series: [],\n        legend: {\n          enabled: false,\n        },\n      })\n    );\n  }, [container]);\n\n  useEffect(() => {\n    if ((instance, category, data)) {\n      const { series, xAxis, yAxis } = instance;\n      const { title, legend } = categories.find((c) => c.id === category);\n      const { years, year } = data;\n\n      instance.reflow();\n\n      const yearRange = years.slice(\n        years.findIndex((y) => legend.some(({ code }) => year[y][code]))\n      );\n\n      while (series.length) {\n        series[0].remove();\n      }\n\n      xAxis[0].setCategories(yearRange);\n      yAxis[0].setTitle({ text: `${title} implementations` });\n\n      legend\n        .slice()\n        .reverse()\n        .forEach(({ code, name, color }) =>\n          instance.addSeries({\n            name: name,\n            data: yearRange.map((y) => year[y][code]),\n            color: color,\n          })\n        );\n    }\n  }, [instance, category, data]);\n\n  useEffect(() => {\n    if (instance && show) {\n      instance.reflow();\n    }\n  }, [instance, show]);\n\n  return (\n    <div\n      id=\"chart\"\n      ref={container}\n      className={`Chart Chart-${show ? \"show\" : \"hide\"}`}\n    ></div>\n  );\n};\n\nexport default Chart;\n","import React, {\n  useRef,\n  useState,\n  useMemo,\n  useCallback,\n  useEffect,\n} from \"react\";\nimport { categories } from \"../utils/data\";\nimport \"./List.css\";\n\nconst marginTop = 70;\nconst marginBottom = 20;\n\nconst List = ({ category, data, show, focus, onClick }) => {\n  const container = useRef();\n  const [cols, setCols] = useState(null);\n\n  const legend = useMemo(\n    () => categories.find((c) => c.id === category).legend,\n    [category]\n  );\n\n  const lists = useMemo(() => {\n    if (legend && data) {\n      const { countries, lastYear } = data;\n\n      setCols(null);\n\n      return legend.map(({ code, name, color }) => ({\n        name,\n        color,\n        items: Object.values(countries)\n          .filter((country) => {\n            const letters = country[lastYear];\n            return letters && letters.indexOf(code) !== -1;\n          }, [])\n          .map((c) => c.name)\n          .sort(),\n        focus: (focus\n          ? Object.keys(countries).filter((id) => focus[id] && focus[id][code])\n          : []\n        ).map((id) => countries[id].name),\n      }));\n    }\n  }, [legend, data, focus]);\n\n  const onResize = useCallback(() => {\n    if (lists && container.current) {\n      const { clientHeight } = container.current;\n      const count = Math.floor((clientHeight - marginTop - marginBottom) / 20);\n      const cols = lists.map(({ items }) => Math.ceil(items.length / count));\n\n      setCols(cols);\n    }\n  }, [container, lists]);\n\n  useEffect(() => {\n    if (show) {\n      window.addEventListener(\"resize\", onResize);\n      onResize();\n    }\n    return () => window.removeEventListener(\"resize\", onResize);\n  }, [show, onResize]);\n\n  return (\n    <div\n      id=\"list\"\n      ref={container}\n      className={`List List-${show ? \"show\" : \"hide\"}`}\n    >\n      <div className=\"container\">\n        {cols &&\n          lists &&\n          lists.map(({ name, color, items, focus }, index) => {\n            const numCols = cols[index];\n\n            return (\n              <div\n                key={name}\n                className=\"section\"\n                style={{\n                  flexGrow: numCols,\n                  flexShrink: numCols,\n                }}\n              >\n                <h2>\n                  <span style={{ backgroundColor: color }}></span>\n                  {name}: {items.length}\n                </h2>\n                <ul\n                  style={{\n                    columnCount: numCols,\n                  }}\n                >\n                  {items.map((name) => (\n                    <li key={name} onClick={() => onClick(name)}>\n                      {name}\n                      {focus.includes(name) ? (\n                        <img src=\"icon-info-48.png\" alt=\"More information\" />\n                      ) : (\n                        \"\"\n                      )}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useState } from \"react\";\nimport Chart from \"./Chart\";\nimport List from \"./List\";\nimport { categories } from \"../utils/data\";\nimport \"./ChartList.css\";\n\nconst ChartListToggle = ({ category, data, focus, onClick }) => {\n  const [showChart, setShowChart] = useState(true);\n  const { hasChart } = categories.find((c) => c.id === category);\n\n  return (\n    <div className=\"ChartList\">\n      <div className=\"menu\">\n        {hasChart && (\n          <div className=\"toggle\" onClick={() => setShowChart(!showChart)}>\n            {showChart\n              ? \"View list of implementations\"\n              : \"View chart of adoption over time\"}\n          </div>\n        )}\n      </div>\n      <div className=\"wrapper\" style={{ top: hasChart ? 30 : 5 }}>\n        <Chart category={category} data={data} show={hasChart && showChart} />\n        <List\n          category={category}\n          data={data}\n          show={!showChart || !hasChart}\n          focus={focus}\n          onClick={onClick}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ChartListToggle;\n","import React, { useState, useEffect } from \"react\";\nimport Fullscreen from \"./components/Fullscreen\";\nimport Sidebar from \"./components/Sidebar\";\nimport Map from \"./components/Map\";\nimport ChartList from \"./components/ChartList\";\nimport { categories, getData, getFocusData } from \"./utils/data\";\nimport \"./App.css\";\n\nconst getInitialCategory = () => {\n  const { hash } = window.location;\n\n  if (hash) {\n    const cat = hash.substr(1);\n\n    if (categories.find((c) => c.id === cat)) {\n      return cat;\n    }\n  }\n\n  return \"health\"; // Default category\n};\n\nconst App = () => {\n  const [category, setCategory] = useState(getInitialCategory());\n  const [data, setData] = useState();\n  const [focus, setFocus] = useState();\n  const [selected, setSelected] = useState();\n\n  useEffect(() => {\n    getData().then(setData);\n  }, []);\n\n  // Load country focus after main data is loaded\n  useEffect(() => {\n    if (data) {\n      getFocusData().then(setFocus);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    window.location.hash = `#${category}`;\n    setSelected();\n  }, [category]);\n\n  return (\n    <Fullscreen>\n      <Sidebar category={category} data={data} onSelect={setCategory}>\n        <Map\n          category={category}\n          data={data}\n          focus={focus}\n          selected={selected}\n          onClick={setSelected}\n        />\n        <ChartList\n          category={category}\n          data={data}\n          focus={focus}\n          onClick={setSelected}\n        />\n      </Sidebar>\n    </Fullscreen>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"core-js/features/string/starts-with\"; // IE 11 support\nimport \"core-js/features/string/includes\"; // IE 11 support\nimport \"core-js/features/array/includes\"; // IE 11 support\nimport \"core-js/features/array/flat-map\"; // IE 11 support\nimport \"core-js/features/array/find\"; // IE 11 support\nimport \"core-js/features/array/find-index\"; // IE 11 support\nimport \"core-js/features/object/assign\"; // IE 11 support\nimport \"core-js/features/object/values\"; // IE 11 support\nimport \"core-js/features/promise\"; // IE 11 support\nimport \"unfetch/polyfill\"; // IE 11 support\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}