{"version":3,"sources":["components/Fullscreen.js","utils/data.js","components/DataProvider.js","components/Loader.js","components/SidebarToggle.js","components/Legend.js","components/Category.js","components/CategoryGroup.js","components/SidebarContent.js","components/Sidebar.js","components/map/MapProvider.js","utils/graticule.js","components/map/Graticule.js","components/map/PopupExplore.js","components/map/PopupFocus.js","components/map/Popup.js","utils/map.js","components/map/CountryFocus.js","components/map/Countries.js","components/Chart.js","components/List.js","components/ChartList.js","components/App.js","serviceWorker.js","index.js"],"names":["Fullscreen","children","useState","isFullscreen","setFullscreen","enabled","onChange","className","onClick","categories","id","group","title","legend","code","name","color","hasChart","legacy","categoryGroups","explore","other","sidebarCategories","filter","c","map","legacyCategories","allLetters","flatMap","reduce","obj","isYear","parseData","values","cols","idx","indexOf","namex","years","match","substring","lastYear","length","rows","slice","countries","year","skip","forEach","row","country","y","letters","replace","split","value","parseSheetData","current","parseFocusData","letterx","titlex","bodyx","imageurlx","imagelinkx","youtubeidx","readmorelinkx","byCountry","letter","body","imageurl","imagelink","youtubeid","readmorelink","fetchData","sheet","fetchJsonp","jsonpCallback","then","response","json","CountriesContext","createContext","DataContext","FocusContext","DataProvider","setCountries","data","setData","focus","setFocus","useEffect","fetch","catch","error","console","log","Provider","Loader","items","useContext","dataContext","SidebarToggle","type","Legend","count","useMemo","key","style","backgroundColor","Category","selected","CategoryGroup","category","item","Sidebar","isDocked","onClose","onSelect","App","sidebarOpen","setSidebarOpen","sidebarDocked","setSidebarDocked","mql","window","matchMedia","addListener","matches","includes","sidebar","SidebarContent","open","docked","onSetOpen","rootClassName","contentClassName","overlayClassName","sidebarClassName","transition","MapContext","bounds","MapProvider","setMap","mapContainer","useRef","leafletMap","crs","CRS","resolutions","maxZoom","fitBounds","ref","Graticule","GeoJSON","extend","options","weight","interval","initialize","L","Util","setOptions","this","_layers","sphere","addData","_getFrame","_getGraticule","coordinates","_getMeridian","concat","reverse","features","lng","push","_getFeature","toString","lat","_getParallel","_lngFix","coords","prop","geometry","properties","GraticuleLayer","opacity","fillColor","fillOpacity","clickable","addTo","PopupExplore","setCategory","setCountry","useCallback","NAME","find","l","PopupFocus","dangerouslySetInnerHTML","__html","src","frameBorder","allow","allowFullScreen","href","rel","target","alt","container","document","createElement","Popup","latlng","CODE","countryData","focusItem","countryFocus","legendItems","i","onPopupOpen","classList","add","onPopupClose","remove","getContainer","clientWidth","maxWidth","maxHeight","clientHeight","popup","setLatLng","setContent","openOn","on","off","createPortal","isExploreMode","getIconPosition","polygon","areas","area","Math","max","apply","polylabel","CountryFocus","layer","infoLayer","getLayers","feature","some","markerOptions","icon","iconUrl","iconSize","geoJSON","pointToLayer","marker","addLayer","removeLayer","Countries","setLayer","setFeature","setLatlng","eachLayer","setStyle","selectedLayer","Chart","show","instance","setInstance","chart","marginTop","text","xAxis","tickmarkPlacement","yAxis","tooltip","plotOptions","stacking","lineColor","lineWidth","series","reflow","yearRange","findIndex","setCategories","setTitle","addSeries","List","setCols","lists","Object","sort","keys","onResize","floor","ceil","addEventListener","removeEventListener","index","numCols","flexGrow","flexShrink","columnCount","ChartListToggle","showChart","setShowChart","top","hash","location","cat","substr","getInitialCategory","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.530448f7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport ReactFullscreen from \"react-full-screen\";\nimport \"./Fullscreen.css\";\n\nconst Fullscreen = ({ children }) => {\n  const [isFullscreen, setFullscreen] = useState(false);\n\n  return (\n    <ReactFullscreen enabled={isFullscreen} onChange={setFullscreen}>\n      {children}\n      <div\n        className={`Fullscreen Fullscreen-${isFullscreen ? \"en\" : \"dis\"}abled`}\n        onClick={() => setFullscreen(!isFullscreen)}\n      />\n    </ReactFullscreen>\n  );\n};\n\nexport default Fullscreen;\n","import fetchJsonp from \"fetch-jsonp\";\n\n// Colors: https://sashamaps.net/docs/resources/20-colors/\n\nexport const categories = [\n  {\n    id: \"all\",\n    group: \"explore\",\n    title: \"Where is DHIS2 used?\",\n    legend: [{ code: \"_\", name: \"All countries\", color: \"#0080d4\" }],\n    hasChart: false,\n  },\n  {\n    id: \"health\",\n    group: \"country-owned\",\n    title: \"Health\",\n    legend: [\n      { code: \"s\", name: \"National\", color: \"#238443\" },\n      { code: \"p\", name: \"Subnational\", color: \"#d9f0a3\" },\n    ],\n    hasChart: true,\n  },\n  {\n    id: \"disease\",\n    group: \"country-owned\",\n    title: \"Disease Surveillance\",\n    legend: [\n      { code: \"d\", name: \"National surveillance system\", color: \"#e34a33\" },\n    ],\n    hasChart: false,\n  },\n  {\n    id: \"covid-19\",\n    group: \"country-owned\",\n    title: \"COVID-19\",\n    legend: [\n      { code: \"y\", name: \"Surveillance & Vaccine\", color: \"#a63603\" },\n      { code: \"c\", name: \"Surveillance only\", color: \"#fd8d3c\" },\n      { code: \"x\", name: \"Vaccine only\", color: \"#fdd0a2\" },\n    ],\n    hasChart: false,\n  },\n  {\n    id: \"logistics\",\n    group: \"country-owned\",\n    title: \"Logistics\",\n    legend: [{ code: \"l\", name: \"DHIS2 for Logistics\", color: \"#808000\" }],\n    hasChart: false,\n  },\n  {\n    id: \"tracker\",\n    group: \"country-owned\",\n    title: \"Tracker\",\n    legend: [{ code: \"t\", name: \"Tracker\", color: \"#e34a33\" }],\n    hasChart: true,\n    legacy: true,\n  },\n  {\n    id: \"android\",\n    group: \"country-owned\",\n    title: \"Android app\",\n    legend: [{ code: \"a\", name: \"Android app\", color: \"#2ca25f\" }],\n    hasChart: true,\n    legacy: true,\n  },\n  {\n    id: \"emis\",\n    group: \"country-owned\",\n    title: \"Education\",\n    legend: [{ code: \"e\", name: \"DHIS2 for Education\", color: \"#ae017e\" }],\n    hasChart: false,\n  },\n  {\n    id: \"other\",\n    group: \"country-owned\",\n    title: \"Other sectors\",\n    legend: [{ code: \"o\", name: \"DHIS2 in other sectors\", color: \"#ff7f00\" }],\n    hasChart: false,\n  },\n  {\n    id: \"projects\",\n    group: \"other\",\n    title: \"Projects using DHIS2\",\n    legend: [{ code: \"n\", name: \"Active projects\", color: \"#ffe119\" }],\n    hasChart: false,\n  },\n];\n\nexport const categoryGroups = {\n  explore: \"Explore the map\",\n  \"country-owned\": \"Country-owned systems\",\n  other: \"NGO and other systems\",\n};\n\nexport const sidebarCategories = categories\n  .filter((c) => !c.legacy)\n  .map((c) => c.id);\n\nexport const legacyCategories = categories\n  .filter((c) => c.legacy)\n  .map((c) => c.id);\n\nconst allLetters = categories\n  .flatMap((c) => c.legend)\n  .filter((c) => c.code)\n  .reduce((obj, { code }) => ({ ...obj, [code]: 0 }), {});\n\nconst isYear = /^Y\\d{4}$/;\n\nconst parseData = (values, legacy) => {\n  const cols = values[0];\n  const idx = cols.indexOf(\"Code\");\n  const namex = cols.indexOf(\"Name\");\n  const years = cols.filter((c) => c.match(isYear)).map((c) => c.substring(1));\n  const lastYear = years[years.length - 1];\n  const rows = values.slice(1);\n  const countries = {};\n  const year = {};\n  let skip = false;\n\n  rows.forEach((row) => {\n    const id = row[idx];\n    const name = row[namex];\n\n    // Loop until first empty id\n    if (!id) {\n      skip = true;\n    }\n\n    if (id && !skip) {\n      const country = (countries[id] = {\n        name: name,\n      });\n\n      years.forEach((y) => {\n        let letters = row[cols.indexOf(`Y${y}`)];\n\n        // Remove tracker and android\n        if (!legacy) {\n          letters = (letters || \"\").replace(\"t\", \"\").replace(\"a\", \"\");\n        }\n\n        if (letters) {\n          if (letters.length) {\n            country[y] = letters;\n\n            if (!year[y]) {\n              year[y] = { ...allLetters };\n            }\n\n            // '_' is used for any letter\n            year[y][\"_\"]++;\n\n            letters.split(\"\").forEach((value) => {\n              year[y][value]++;\n            });\n          }\n        }\n      });\n    }\n  });\n\n  return { countries, year, years, lastYear };\n};\n\nconst parseSheetData = ({ values }) => {\n  return {\n    current: parseData(values, false),\n    legacy: parseData(values, true), // Includes tracker and android\n  };\n};\n\nconst parseFocusData = ({ values }) => {\n  const cols = values[0];\n  const rows = values.slice(1);\n  const idx = cols.indexOf(\"Country code\");\n  const letterx = cols.indexOf(\"Letter\");\n  const titlex = cols.indexOf(\"Title\");\n  const bodyx = cols.indexOf(\"Body\");\n  const imageurlx = cols.indexOf(\"Image url\");\n  const imagelinkx = cols.indexOf(\"Image link\");\n  const youtubeidx = cols.indexOf(\"YouTube ID\");\n  const readmorelinkx = cols.indexOf(\"Read more link\");\n  const byCountry = {};\n\n  rows.forEach((row) => {\n    const id = row[idx];\n    const letter = row[letterx];\n    const title = row[titlex];\n    const body = row[bodyx];\n    const imageurl = row[imageurlx];\n    const imagelink = row[imagelinkx];\n    const youtubeid = row[youtubeidx];\n    const readmorelink = row[readmorelinkx];\n\n    if (!byCountry[id]) {\n      byCountry[id] = {};\n    }\n\n    byCountry[id][letter] = {\n      title,\n      body,\n      imageurl,\n      imagelink,\n      youtubeid,\n      readmorelink,\n    };\n  });\n\n  return byCountry;\n};\n\nconst fetchData = (sheet) =>\n  fetchJsonp(\n    `https://sheets.googleapis.com/v4/spreadsheets/1GRqJrapEJ7HBnrsvcIA0PlTok1DfgRLng7S4XLODXS4/values/${sheet}?key=AIzaSyDWyCSemDgAxocSL7j9Dy4mi93xTTcPEek`,\n    { jsonpCallback: \"callback\" }\n  ).then((response) => response.json());\n\nexport const getData = () =>\n  fetchData(\"Country status per year\").then(parseSheetData);\n\nexport const getFocusData = () =>\n  fetchData(\"Country focus\").then(parseFocusData);\n","import React, { createContext, useState, useEffect } from \"react\";\nimport { getData, getFocusData } from \"../utils/data\";\n\nexport const CountriesContext = createContext();\nexport const DataContext = createContext();\nexport const FocusContext = createContext();\n\nconst DataProvider = ({ children }) => {\n  const [countries, setCountries] = useState();\n  const [data, setData] = useState();\n  const [focus, setFocus] = useState();\n\n  useEffect(() => {\n    fetch(\"./countries.json\")\n      .then((response) => response.json())\n      .then(setCountries)\n      .catch((error) => console.log(error));\n\n    getData().then(setData);\n  }, []);\n\n  // Load country focus after main data is loaded\n  useEffect(() => {\n    if (data) {\n      getFocusData().then(setFocus);\n    }\n  }, [data]);\n\n  return (\n    <>\n      <CountriesContext.Provider value={countries}>\n        <DataContext.Provider value={data}>\n          <FocusContext.Provider value={focus}>\n            {children}\n          </FocusContext.Provider>\n        </DataContext.Provider>\n      </CountriesContext.Provider>\n    </>\n  );\n};\n\nexport default DataProvider;\n","import React, { useContext } from \"react\";\nimport { CountriesContext, DataContext } from \"./DataProvider\";\nimport \"./Loader.css\";\n\nconst Loader = ({ items }) => {\n  const countries = useContext(CountriesContext);\n  const dataContext = useContext(DataContext);\n\n  return countries && dataContext ? null : (\n    <div className=\"mask\">\n      <div className=\"loader\"></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport \"./SidebarToggle.css\";\n\nconst SidebarToggle = ({ type, onClick }) => (\n  <div className={`SidebarToggle SidebarToggle-${type}`} onClick={onClick}>\n    {type === \"open\" ? (\n      <>\n        Map options<span>&gt;</span>\n      </>\n    ) : (\n      <>\n        <span>&lt;</span>Close map options\n      </>\n    )}\n  </div>\n);\n\nexport default SidebarToggle;\n","import React, { useContext, useMemo } from \"react\";\nimport { DataContext } from \"./DataProvider\";\nimport \"./Legend.css\";\n\nconst Legend = ({ items }) => {\n  const dataContext = useContext(DataContext);\n  const data = dataContext?.current;\n\n  const count = useMemo(() => (data ? data.year[data.lastYear] : {}), [data]);\n\n  return (\n    <div className=\"Legend\">\n      {items.map(({ code, name, color }) => (\n        <div key={color}>\n          <span style={{ backgroundColor: color }}></span> {name}\n          {count[code] ? ` (${count[code]})` : \"\"}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Legend;\n","import React from \"react\";\nimport Legend from \"./Legend\";\nimport \"./Category.css\";\n\nconst Category = ({ id, title, legend, selected, onClick }) => (\n  <div\n    onClick={() => onClick(id)}\n    className={`Category${selected ? \" Category-selected\" : \"\"}`}\n  >\n    <h3>{title}</h3>\n    {selected && <Legend items={legend} />}\n  </div>\n);\n\nexport default Category;\n","import React from \"react\";\nimport Category from \"./Category\";\nimport { categoryGroups, categories } from \"../utils/data\";\n\nconst CategoryGroup = ({ group, category, onClick }) => (\n  <div>\n    <h2>{categoryGroups[group]}</h2>\n    {categories\n      .filter((c) => c.group === group && !c.legacy)\n      .map((item) => (\n        <Category\n          key={item.id}\n          onClick={onClick}\n          selected={category === item.id}\n          {...item}\n        />\n      ))}\n  </div>\n);\n\nexport default CategoryGroup;\n","import React from \"react\";\nimport SidebarToggle from \"./SidebarToggle\";\nimport CategoryGroup from \"./CategoryGroup\";\n\nconst Sidebar = ({ category, isDocked, onClose, onSelect }) => {\n  return (\n    <>\n      {!isDocked && <SidebarToggle type=\"close\" onClick={onClose} />}\n      <div className=\"Sidebar-header\">\n        <h1>DHIS2 in action</h1>\n        <p>\n          DHIS2 is in use all over the world. Check out different use cases with\n          this interactive map.\n        </p>\n      </div>\n      <CategoryGroup group=\"explore\" onClick={onSelect} category={category} />\n      <CategoryGroup\n        group=\"country-owned\"\n        onClick={onSelect}\n        category={category}\n      />\n      <CategoryGroup group=\"other\" onClick={onSelect} category={category} />\n    </>\n  );\n};\n\nexport default Sidebar;\n","import React, { useState, useEffect } from \"react\";\nimport ReactSidebar from \"react-sidebar\";\nimport SidebarContent from \"./SidebarContent\";\nimport SidebarToggle from \"./SidebarToggle\";\nimport { sidebarCategories } from \"../utils/data\";\nimport \"./Sidebar.css\";\n\nconst App = ({ category, onSelect, children }) => {\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [sidebarDocked, setSidebarDocked] = useState(false);\n\n  useEffect(() => {\n    const mql = window.matchMedia(`(min-width: 700px)`);\n    mql.addListener(() => setSidebarDocked(mql.matches));\n    setSidebarDocked(mql.matches);\n  }, []);\n\n  if (!sidebarCategories.includes(category)) {\n    return children;\n  }\n\n  return (\n    <ReactSidebar\n      sidebar={\n        <SidebarContent\n          category={category}\n          onSelect={onSelect}\n          isDocked={sidebarDocked}\n          onClose={() => setSidebarOpen(false)}\n        />\n      }\n      open={sidebarOpen}\n      docked={sidebarDocked}\n      onSetOpen={() => setSidebarOpen(true)}\n      rootClassName=\"App\"\n      contentClassName=\"App-main\"\n      overlayClassName=\"App-overlay\"\n      sidebarClassName=\"Sidebar\"\n    >\n      {sidebarOpen && !sidebarDocked && (\n        <div className=\"App-mask\" onClick={() => setSidebarOpen(false)}></div>\n      )}\n      <div\n        style={{\n          transition: \"none\",\n        }}\n      >\n        {children}\n      </div>\n      {!sidebarOpen && !sidebarDocked && (\n        <SidebarToggle type=\"open\" onClick={() => setSidebarOpen(true)} />\n      )}\n    </ReactSidebar>\n  );\n};\n\nexport default App;\n","import React, { createContext, useState, useRef, useEffect } from \"react\";\nimport { map as leafletMap } from \"leaflet\";\nimport { CRS } from \"proj4leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./Map.css\";\n\nexport const MapContext = createContext();\n\nconst bounds = [\n  [-40, -100],\n  [50, 165],\n];\n\nconst MapProvider = ({ children }) => {\n  const [map, setMap] = useState();\n  const mapContainer = useRef();\n\n  useEffect(() => {\n    setMap(\n      leafletMap(mapContainer.current, {\n        crs: new CRS(\n          \"ESRI:53009\",\n          \"+proj=moll +lon_0=0 +x_0=0 +y_0=0 +a=6371000 +b=6371000 +units=m +no_defs\",\n          {\n            resolutions: [50000, 40000, 30000, 20000, 10000, 5000, 2500, 1250],\n          }\n        ),\n        maxZoom: 7,\n      }).fitBounds(bounds)\n    );\n  }, [mapContainer]);\n\n  return (\n    <div ref={mapContainer} className=\"Map\">\n      {map && <MapContext.Provider value={map}>{children}</MapContext.Provider>}\n    </div>\n  );\n};\n\nexport default MapProvider;\n","import L, { GeoJSON } from \"leaflet\";\n\nconst Graticule = GeoJSON.extend({\n  options: {\n    style: {\n      color: \"#333\",\n      weight: 1\n    },\n    interval: 20\n  },\n\n  initialize(options) {\n    L.Util.setOptions(this, options);\n    this._layers = {};\n\n    if (this.options.sphere) {\n      this.addData(this._getFrame());\n    } else {\n      this.addData(this._getGraticule());\n    }\n  },\n\n  _getFrame() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        this._getMeridian(-180).concat(this._getMeridian(180).reverse())\n      ]\n    };\n  },\n\n  _getGraticule() {\n    var features = [],\n      interval = this.options.interval;\n\n    // Meridians\n    for (var lng = 0; lng <= 180; lng = lng + interval) {\n      features.push(\n        this._getFeature(this._getMeridian(lng), {\n          name: lng ? lng.toString() + \"° E\" : \"Prime meridian\"\n        })\n      );\n      if (lng !== 0) {\n        features.push(\n          this._getFeature(this._getMeridian(-lng), {\n            name: lng.toString() + \"° W\"\n          })\n        );\n      }\n    }\n\n    // Parallels\n    for (var lat = 0; lat <= 90; lat = lat + interval) {\n      features.push(\n        this._getFeature(this._getParallel(lat), {\n          name: lat ? lat.toString() + \"° N\" : \"Equator\"\n        })\n      );\n      if (lat !== 0) {\n        features.push(\n          this._getFeature(this._getParallel(-lat), {\n            name: lat.toString() + \"° S\"\n          })\n        );\n      }\n    }\n\n    return {\n      type: \"FeatureCollection\",\n      features: features\n    };\n  },\n\n  _getMeridian(lng) {\n    lng = this._lngFix(lng);\n    var coords = [];\n    for (var lat = -90; lat <= 90; lat++) {\n      coords.push([lng, lat]);\n    }\n    return coords;\n  },\n\n  _getParallel(lat) {\n    var coords = [];\n    for (var lng = -180; lng <= 180; lng++) {\n      coords.push([this._lngFix(lng), lat]);\n    }\n    return coords;\n  },\n\n  _getFeature(coords, prop) {\n    return {\n      type: \"Feature\",\n      geometry: {\n        type: \"LineString\",\n        coordinates: coords\n      },\n      properties: prop\n    };\n  },\n\n  _lngFix(lng) {\n    if (lng >= 180) return 179.999999;\n    if (lng <= -180) return -179.999999;\n    return lng;\n  }\n});\n\nexport default Graticule;\n","import { useContext, useEffect } from \"react\";\nimport Graticule from \"../../utils/graticule\";\nimport { MapContext } from \"./MapProvider\";\n\nconst GraticuleLayer = () => {\n  const map = useContext(MapContext);\n\n  useEffect(() => {\n    new Graticule({\n      sphere: true,\n      style: {\n        opacity: 0,\n        fillColor: \"#edf7ff\",\n        fillOpacity: 1,\n        clickable: false,\n      },\n    }).addTo(map);\n  }, [map]);\n\n  return null;\n};\n\nexport default GraticuleLayer;\n","import React, { useCallback } from \"react\";\nimport { categories } from \"../../utils/data\";\n\nconst PopupExplore = ({ country, letters = \"\", setCategory, setCountry }) => {\n  const onClick = useCallback(\n    (category) => {\n      setCategory(category);\n      setCountry(country.NAME);\n    },\n    [country, setCategory, setCountry]\n  );\n\n  return categories\n    .filter((c) => !c.legacy && c.legend.find((l) => letters.includes(l.code)))\n    .map(({ id, title, legend }) => {\n      const { code, name } = legend.find((l) => letters.includes(l.code));\n      return (\n        <div className=\"explore\" key={code} onClick={() => onClick(id)}>\n          {legend.length > 1 ? (\n            <>\n              {title}: {name}\n            </>\n          ) : (\n            name\n          )}\n        </div>\n      );\n    });\n};\n\nexport default PopupExplore;\n","import React from \"react\";\n\nconst PopupFocus = ({ data }) => {\n  const { title, body, imageurl, imagelink, youtubeid, readmorelink } = data;\n\n  return (\n    <>\n      <h3>{title}</h3>\n      {body && <div dangerouslySetInnerHTML={{ __html: body }} />}\n      {youtubeid ? (\n        <div className=\"aspect-ratio\">\n          <iframe\n            title=\"YouTube video player\"\n            src={`https://www.youtube.com/embed/${youtubeid}`}\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          ></iframe>\n        </div>\n      ) : imageurl ? (\n        <>\n          {imagelink ? (\n            <a href={imagelink} rel=\"noopener noreferrer\" target=\"_blank\">\n              <img src={imageurl} alt=\"\" />\n            </a>\n          ) : (\n            <img src={imageurl} alt=\"\" />\n          )}\n        </>\n      ) : null}\n      {readmorelink && (\n        <p>\n          <a href={readmorelink} rel=\"noopener noreferrer\" target=\"_blank\">\n            Learn more\n          </a>\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default PopupFocus;\n","import React, { useContext, useCallback, useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { popup } from \"leaflet\";\nimport PopupExplore from \"./PopupExplore\";\nimport PopupFocus from \"./PopupFocus\";\nimport { MapContext } from \"./MapProvider\";\nimport { DataContext, FocusContext } from \"../DataProvider\";\nimport { legacyCategories } from \"../../utils/data\";\n\nconst container = document.createElement(\"div\");\n\nconst Popup = ({\n  latlng,\n  category,\n  country,\n  legend,\n  setCountry,\n  setCategory,\n  onClose,\n}) => {\n  const map = useContext(MapContext);\n  const dataContext = useContext(DataContext);\n  const data =\n    dataContext?.[legacyCategories.includes(category) ? \"legacy\" : \"current\"];\n  const focus = useContext(FocusContext);\n\n  const { CODE, NAME } = country;\n\n  const countryData = data?.countries[CODE];\n  const focusItem = legend.find((l) => focus?.[CODE]?.[l.code]);\n  const countryFocus = focus[CODE]?.[focusItem?.code];\n\n  const isExploreMode = (legend) => legend[0].code === \"_\";\n\n  const legendItems =\n    countryData &&\n    legend\n      .map((i) => ({\n        ...i,\n        year: data.years.find(\n          (y) => countryData[y] && countryData[y].includes(i.code)\n        ),\n      }))\n      .filter((i) => i.year);\n\n  const onPopupOpen = useCallback(\n    () => document.body.classList.add(\"popupopen\"),\n    []\n  );\n\n  const onPopupClose = useCallback(() => {\n    document.body.classList.remove(\"popupopen\");\n    setCountry();\n    onClose();\n  }, [setCountry, onClose]);\n\n  useEffect(() => {\n    const { clientWidth, clientHeight } = map.getContainer();\n    const maxWidth = clientWidth < 400 ? clientWidth - 100 : 300;\n    const maxHeight = clientHeight - 100;\n\n    popup({\n      maxWidth,\n      maxHeight,\n    })\n      .setLatLng(latlng)\n      .setContent(container)\n      .openOn(map);\n  }, [map, latlng, category]);\n\n  useEffect(() => {\n    if (map) {\n      map.on(\"popupopen\", onPopupOpen);\n      map.on(\"popupclose\", onPopupClose);\n    }\n\n    return () => {\n      if (map) {\n        map.off(\"popupopen\", onPopupOpen);\n        map.off(\"popupclose\", onPopupClose);\n      }\n    };\n  }, [map, onPopupOpen, onPopupClose]);\n\n  return createPortal(\n    <>\n      <h2>{NAME}</h2>\n      {legendItems?.map(({ code, name, year }) => (\n        <div key={code}>\n          {name === \"National\" ? (\n            \"National scale since \"\n          ) : name === \"Subnational\" ? (\n            \"Using DHIS2 since \"\n          ) : (\n            <>{name}: Since </>\n          )}\n          {year}\n        </div>\n      ))}\n      {isExploreMode(legend) && countryData ? (\n        <PopupExplore\n          country={country}\n          letters={countryData[data.lastYear]}\n          data={data}\n          setCountry={setCountry}\n          setCategory={setCategory}\n        />\n      ) : null}\n      {countryFocus ? <PopupFocus data={countryFocus} /> : null}\n    </>,\n    container\n  );\n};\n\nexport default Popup;\n","import area from \"@turf/area\";\nimport polylabel from \"polylabel\";\n\nexport const getIconPosition = ({ type, coordinates }) => {\n  let polygon = coordinates;\n\n  if (type === \"MultiPolygon\") {\n    const areas = coordinates.map((coords) =>\n      area({\n        type: \"Polygon\",\n        coordinates: coords,\n      })\n    );\n    const maxIndex = areas.indexOf(Math.max.apply(null, areas));\n    polygon = coordinates[maxIndex];\n  }\n\n  return polylabel(polygon, 0.1);\n};\n","import { useContext, useEffect } from \"react\";\nimport { geoJSON, marker, icon } from \"leaflet\";\nimport { MapContext } from \"./MapProvider\";\nimport { FocusContext } from \"../DataProvider\";\nimport { getIconPosition } from \"../../utils/map\";\n\nconst CountryFocus = ({ layer, legend, onClick }) => {\n  const map = useContext(MapContext);\n  const focus = useContext(FocusContext);\n\n  useEffect(() => {\n    if (map && layer && legend && focus) {\n      let infoLayer;\n\n      const features = layer\n        .getLayers()\n        .filter(({ feature }) => {\n          const code = feature.properties.CODE;\n          return focus[code] && legend.some((l) => focus[code][l.code]);\n        })\n        .map(({ feature }) => ({\n          ...feature,\n          geometry: {\n            type: \"Point\",\n            coordinates: getIconPosition(feature.geometry),\n          },\n        }));\n\n      if (features.length) {\n        const markerOptions = {\n          icon: icon({\n            iconUrl: \"icon-info-48.png\",\n            iconSize: [20, 20],\n          }),\n        };\n\n        infoLayer = geoJSON(features, {\n          pointToLayer: (feature, latlng) => marker(latlng, markerOptions),\n        }).on(\"click\", onClick);\n\n        map.addLayer(infoLayer);\n\n        return () => {\n          if (infoLayer) {\n            infoLayer.off(\"click\", onClick);\n            map.removeLayer(infoLayer);\n          }\n        };\n      }\n    }\n  }, [map, layer, legend, focus, onClick]);\n\n  return null;\n};\n\nexport default CountryFocus;\n","import React, {\n  useContext,\n  useState,\n  useMemo,\n  useCallback,\n  useEffect,\n} from \"react\";\nimport { geoJSON } from \"leaflet\";\nimport Popup from \"./Popup\";\nimport { MapContext } from \"./MapProvider\";\nimport CountryFocus from \"./CountryFocus\";\nimport { CountriesContext, DataContext } from \"../DataProvider\";\nimport { categories, legacyCategories } from \"../../utils/data\";\nimport { getIconPosition } from \"../../utils/map\";\n\nconst noDataColor = \"#fff\";\n\nconst Countries = ({ category, selected, setCountry, setCategory }) => {\n  const countries = useContext(CountriesContext);\n  const dataContext = useContext(DataContext);\n  const data =\n    dataContext?.[legacyCategories.includes(category) ? \"legacy\" : \"current\"];\n\n  const map = useContext(MapContext);\n  const [layer, setLayer] = useState();\n  const [feature, setFeature] = useState();\n  const [latlng, setLatlng] = useState();\n\n  const legend = useMemo(\n    () => categories.find((c) => c.id === category).legend,\n    [category]\n  );\n\n  const onClick = useCallback(\n    ({ latlng, layer }) => {\n      setFeature();\n      setLatlng(latlng);\n      setFeature(layer.feature.properties);\n      setCountry(); // Clear previously clicked country in list\n    },\n    [setCountry]\n  );\n\n  useEffect(() => {\n    if (countries) {\n      setLayer(\n        geoJSON(countries, {\n          color: \"#555\",\n          weight: 1,\n          fillColor: noDataColor,\n          fillOpacity: 0.75,\n        }).addTo(map)\n      );\n    }\n  }, [map, countries]);\n\n  useEffect(() => {\n    if (layer && legend && data) {\n      const { countries, lastYear } = data;\n\n      layer.eachLayer((item) =>\n        item.setStyle({\n          fillColor: noDataColor,\n        })\n      );\n\n      layer.eachLayer((item) => {\n        const code = item.feature.properties.CODE;\n\n        if (code && countries[code] && countries[code][lastYear]) {\n          const country = countries[code];\n          const letters = country[lastYear];\n\n          // Use name from Google Spreadsheet\n          item.feature.properties.NAME = country.name;\n\n          legend.forEach(({ code, color }) => {\n            if (letters.indexOf(code) !== -1 || code === \"_\") {\n              item.setStyle({\n                fillColor: color,\n              });\n            }\n          });\n        }\n      });\n    }\n  }, [layer, legend, data]);\n\n  useEffect(() => {\n    if (layer) {\n      layer.on(\"click\", onClick);\n    }\n    return () => {\n      if (layer) {\n        layer.off(\"click\", onClick);\n      }\n    };\n  }, [layer, onClick]);\n\n  useEffect(() => {\n    if (selected) {\n      const selectedLayer = layer\n        .getLayers()\n        .find((l) => l.feature.properties.NAME === selected);\n\n      if (selectedLayer) {\n        setLatlng(getIconPosition(selectedLayer.feature.geometry).reverse());\n        setFeature(selectedLayer.feature.properties);\n      }\n    }\n  }, [layer, selected]);\n\n  return (\n    <>\n      <CountryFocus layer={layer} legend={legend} onClick={onClick} />\n      {feature ? (\n        <Popup\n          category={category}\n          country={feature}\n          latlng={latlng}\n          legend={legend}\n          setCountry={setCountry}\n          setCategory={setCategory}\n          onClose={() => setFeature()}\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default Countries;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { chart } from \"highcharts\";\nimport { categories } from \"../utils/data\";\nimport \"./Chart.css\";\n\nconst Chart = ({ category, data, show }) => {\n  const [instance, setInstance] = useState();\n  const container = useRef();\n\n  useEffect(() => {\n    setInstance(\n      chart(\"chart\", {\n        chart: {\n          type: \"area\",\n          marginTop: 4,\n        },\n        title: {\n          text: null, // 'Countries using DHIS 2'\n        },\n        xAxis: {\n          tickmarkPlacement: \"on\",\n          title: {\n            enabled: false,\n          },\n        },\n        yAxis: {\n          title: {\n            text: \"Countries using DHIS2\",\n          },\n        },\n        tooltip: {\n          split: true,\n        },\n        plotOptions: {\n          area: {\n            stacking: \"normal\",\n            lineColor: \"#666666\",\n            lineWidth: 1,\n            marker: {\n              lineWidth: 1,\n              lineColor: \"#666666\",\n            },\n          },\n        },\n        series: [],\n        legend: {\n          enabled: false,\n        },\n      })\n    );\n  }, [container]);\n\n  useEffect(() => {\n    if ((instance, category, data)) {\n      const { series, xAxis, yAxis } = instance;\n      const { title, legend } = categories.find((c) => c.id === category);\n      const { years, year } = data;\n\n      instance.reflow();\n\n      const yearRange = years.slice(\n        years.findIndex((y) => legend.some(({ code }) => year[y][code]))\n      );\n\n      while (series.length) {\n        series[0].remove();\n      }\n\n      xAxis[0].setCategories(yearRange);\n      yAxis[0].setTitle({ text: `${title} implementations` });\n\n      legend\n        .slice()\n        .reverse()\n        .forEach(({ code, name, color }) =>\n          instance.addSeries({\n            name: name,\n            data: yearRange.map((y) => year[y][code]),\n            color: color,\n          })\n        );\n    }\n  }, [instance, category, data]);\n\n  useEffect(() => {\n    if (instance && show) {\n      instance.reflow();\n    }\n  }, [instance, show]);\n\n  return (\n    <div\n      id=\"chart\"\n      ref={container}\n      className={`Chart Chart-${show ? \"show\" : \"hide\"}`}\n    ></div>\n  );\n};\n\nexport default Chart;\n","import React, {\n  useRef,\n  useState,\n  useMemo,\n  useCallback,\n  useEffect,\n} from \"react\";\nimport { categories } from \"../utils/data\";\nimport \"./List.css\";\n\nconst marginTop = 70;\nconst marginBottom = 20;\n\nconst List = ({ category, data, show, focus, onClick }) => {\n  const container = useRef();\n  const [cols, setCols] = useState(null);\n\n  const legend = useMemo(\n    () => categories.find((c) => c.id === category).legend,\n    [category]\n  );\n\n  const lists = useMemo(() => {\n    if (legend && data) {\n      const { countries, lastYear } = data;\n\n      setCols(null);\n\n      return legend.map(({ code, name, color }) => ({\n        name,\n        color,\n        items: Object.values(countries)\n          .filter((country) => {\n            const letters = country[lastYear];\n            return letters && (code === \"_\" || letters.indexOf(code) !== -1);\n          }, [])\n          .map((c) => c.name)\n          .sort(),\n        focus: (focus\n          ? Object.keys(countries).filter((id) => focus[id] && focus[id][code])\n          : []\n        ).map((id) => countries[id].name),\n      }));\n    }\n  }, [legend, data, focus]);\n\n  const onResize = useCallback(() => {\n    if (lists && container.current) {\n      const { clientHeight } = container.current;\n      const count = Math.floor((clientHeight - marginTop - marginBottom) / 20);\n      const cols = lists.map(({ items }) => Math.ceil(items.length / count));\n\n      setCols(cols);\n    }\n  }, [container, lists]);\n\n  useEffect(() => {\n    if (show) {\n      window.addEventListener(\"resize\", onResize);\n      onResize();\n    }\n    return () => window.removeEventListener(\"resize\", onResize);\n  }, [show, onResize]);\n\n  return (\n    <div\n      id=\"list\"\n      ref={container}\n      className={`List List-${show ? \"show\" : \"hide\"}`}\n    >\n      <div className=\"container\">\n        {cols &&\n          lists &&\n          lists.map(({ name, color, items, focus }, index) => {\n            const numCols = cols[index];\n\n            return (\n              <div\n                key={name}\n                className=\"section\"\n                style={{\n                  flexGrow: numCols,\n                  flexShrink: numCols,\n                }}\n              >\n                <h2>\n                  <span style={{ backgroundColor: color }}></span>\n                  {name}: {items.length}\n                </h2>\n                <ul\n                  style={{\n                    columnCount: numCols,\n                  }}\n                >\n                  {items.map((name) => (\n                    <li key={name} onClick={() => onClick(name)}>\n                      {name}\n                      {focus.includes(name) ? (\n                        <img src=\"icon-info-48.png\" alt=\"More information\" />\n                      ) : (\n                        \"\"\n                      )}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useContext, useState } from \"react\";\nimport Chart from \"./Chart\";\nimport List from \"./List\";\nimport { DataContext, FocusContext } from \"./DataProvider\";\nimport { categories, legacyCategories } from \"../utils/data\";\nimport \"./ChartList.css\";\n\nconst ChartListToggle = ({ category, onClick }) => {\n  const dataContext = useContext(DataContext);\n  const data =\n    dataContext?.[legacyCategories.includes(category) ? \"legacy\" : \"current\"];\n  const focus = useContext(FocusContext);\n  const [showChart, setShowChart] = useState(true);\n  const { hasChart } = categories.find((c) => c.id === category);\n\n  return (\n    <div className=\"ChartList\">\n      <div className=\"menu\">\n        {hasChart && (\n          <div className=\"toggle\" onClick={() => setShowChart(!showChart)}>\n            {showChart\n              ? \"View list of implementations\"\n              : \"View chart of adoption over time\"}\n          </div>\n        )}\n      </div>\n      <div className=\"wrapper\" style={{ top: hasChart ? 30 : 5 }}>\n        <Chart category={category} data={data} show={hasChart && showChart} />\n        <List\n          category={category}\n          data={data}\n          show={!showChart || !hasChart}\n          focus={focus}\n          onClick={onClick}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ChartListToggle;\n","import React, { useState, useEffect } from \"react\";\nimport Fullscreen from \"./Fullscreen\";\nimport DataProvider from \"./DataProvider\";\nimport Loader from \"./Loader\";\nimport Sidebar from \"./Sidebar\";\nimport MapProvider from \"./map/MapProvider\";\nimport Graticule from \"./map/Graticule\";\nimport Countries from \"./map/Countries\";\nimport ChartList from \"./ChartList\";\nimport { categories } from \"../utils/data\";\nimport \"./App.css\";\n\nconst getInitialCategory = () => {\n  const { hash } = window.location;\n\n  if (hash) {\n    const cat = hash.substr(1);\n\n    if (categories.find((c) => c.id === cat)) {\n      return cat;\n    }\n  }\n\n  return \"all\"; // Default category\n};\n\nconst App = () => {\n  const [category, setCategory] = useState(getInitialCategory());\n  const [country, setCountry] = useState();\n\n  useEffect(() => {\n    window.location.hash = `#${category}`;\n  }, [category]);\n\n  return (\n    <Fullscreen>\n      <DataProvider>\n        <Loader />\n        <Sidebar category={category} onSelect={setCategory}>\n          <MapProvider>\n            <Graticule />\n            <Countries\n              category={category}\n              selected={country}\n              setCountry={setCountry}\n              setCategory={setCategory}\n            />\n          </MapProvider>\n          <ChartList category={category} onClick={setCountry} />\n        </Sidebar>\n      </DataProvider>\n    </Fullscreen>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"core-js/features/string/starts-with\"; // IE 11 support\nimport \"core-js/features/string/includes\"; // IE 11 support\nimport \"core-js/features/array/includes\"; // IE 11 support\nimport \"core-js/features/array/flat-map\"; // IE 11 support\nimport \"core-js/features/array/find\"; // IE 11 support\nimport \"core-js/features/array/find-index\"; // IE 11 support\nimport \"core-js/features/object/assign\"; // IE 11 support\nimport \"core-js/features/object/values\"; // IE 11 support\nimport \"core-js/features/promise\"; // IE 11 support\nimport \"unfetch/polyfill\"; // IE 11 support\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}