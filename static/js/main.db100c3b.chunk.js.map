{"version":3,"sources":["components/Fullscreen.js","components/SidebarToggle.js","components/Legend.js","components/Category.js","utils/data.js","components/SidebarContent.js","components/Sidebar.js","utils/graticule.js","components/Map.js","components/Chart.js","components/List.js","components/ChartList.js","App.js","serviceWorker.js","index.js"],"names":["Fullscreen","children","useState","isFullscreen","setFullscreen","enabled","onChange","className","onClick","SidebarToggle","type","Legend","items","data","count","useMemo","year","lastYear","map","code","name","color","key","style","backgroundColor","Category","id","title","legend","selected","categories","hasChart","parseData","rows","feed","entry","row","years","col","hasOwnProperty","slice","push","length","countries","forEach","country","y","letters","startsWith","replace","p","s","i","t","a","e","c","v","split","value","Sidebar","category","isDocked","onClose","onSelect","item","App","sidebarOpen","setSidebarOpen","sidebarDocked","setSidebarDocked","useEffect","mql","window","matchMedia","addListener","matches","sidebar","SidebarContent","open","docked","onSetOpen","rootClassName","contentClassName","overlayClassName","sidebarClassName","Graticule","GeoJSON","extend","options","weight","interval","initialize","L","Util","setOptions","this","_layers","sphere","addData","_getFrame","_getGraticule","coordinates","_getMeridian","concat","reverse","features","lng","_getFeature","toString","lat","_getParallel","_lngFix","coords","prop","geometry","properties","bounds","Map","height","instance","setInstance","layer","setLayer","container","useRef","current","crs","CRS","resolutions","maxZoom","fitBounds","invalidateSize","opacity","fillColor","fillOpacity","clickable","addTo","fetch","then","response","json","geoJSON","catch","error","console","log","find","eachLayer","setStyle","feature","CODE","some","includes","bringToFront","bringToBack","indexOf","bindPopup","NAME","content","filter","join","ref","Chart","show","chart","marginTop","text","xAxis","tickmarkPlacement","yAxis","tooltip","plotOptions","area","stacking","lineColor","lineWidth","marker","series","reflow","yearRange","findIndex","remove","setCategories","setTitle","addSeries","List","cols","setCols","lists","Object","values","sort","onResize","useCallback","clientHeight","Math","floor","ceil","addEventListener","removeEventListener","index","numCols","flexGrow","flexShrink","columnCount","ChartListToggle","showChart","setShowChart","top","hash","location","cat","substr","getInitialCategory","setCategory","setData","fetchJsonp","jsonpCallback","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.db100c3b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport ReactFullscreen from \"react-full-screen\";\nimport \"./Fullscreen.css\";\n\nconst Fullscreen = ({ children }) => {\n  const [isFullscreen, setFullscreen] = useState(false);\n\n  return (\n    <ReactFullscreen enabled={isFullscreen} onChange={setFullscreen}>\n      {children}\n      <div\n        className={`Fullscreen Fullscreen-${isFullscreen ? \"en\" : \"dis\"}abled`}\n        onClick={() => setFullscreen(!isFullscreen)}\n      />\n    </ReactFullscreen>\n  );\n};\n\nexport default Fullscreen;\n","import React from \"react\";\nimport \"./SidebarToggle.css\";\n\nconst SidebarToggle = ({ type, onClick }) => (\n  <div className={`SidebarToggle SidebarToggle-${type}`} onClick={onClick}>\n    {type === \"open\" ? (\n      <>\n        Map options<span>&gt;</span>\n      </>\n    ) : (\n      <>\n        <span>&lt;</span>Close map options\n      </>\n    )}\n  </div>\n);\n\nexport default SidebarToggle;\n","import React, { useMemo } from \"react\";\nimport \"./Legend.css\";\n\nconst Legend = ({ items, data }) => {\n  const count = useMemo(() => (data ? data.year[data.lastYear] : {}), [data]);\n\n  return (\n    <div className=\"Legend\">\n      {items.map(({ code, name, color }) => (\n        <div key={code}>\n          <span style={{ backgroundColor: color }}></span> {name} ({count[code]}\n          )\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Legend;\n","import React from \"react\";\nimport Legend from \"./Legend\";\nimport \"./Category.css\";\n\nconst Category = ({ id, title, legend, selected, data, onClick }) => (\n  <div\n    onClick={() => onClick(id)}\n    className={`Category${selected ? \" Category-selected\" : \"\"}`}\n  >\n    <h2>{title}</h2>\n    {selected && <Legend items={legend} data={data} />}\n  </div>\n);\n\nexport default Category;\n","import fetchJsonp from \"fetch-jsonp\";\n\nexport const categories = [\n  {\n    id: \"health\",\n    title: \"Health Information System\",\n    legend: [\n      { code: \"s\", name: \"National\", color: \"#238443\" },\n      { code: \"i\", name: \"Indian State\", color: \"#78c679\" },\n      { code: \"p\", name: \"Pilot\", color: \"#d9f0a3\" },\n    ],\n    hasChart: true,\n  },\n  {\n    id: \"covid-19\",\n    title: \"COVID-19\",\n    legend: [\n      { code: \"c\", name: \"Operational\", color: \"#d95f0e\" },\n      { code: \"v\", name: \"In development\", color: \"#fec44f\" },\n    ],\n    hasChart: false,\n  },\n  {\n    id: \"tracker\",\n    title: \"Tracker\",\n    legend: [{ code: \"t\", name: \"Tracker\", color: \"#e34a33\" }],\n    hasChart: true,\n  },\n  {\n    id: \"android\",\n    title: \"Android app\",\n    legend: [{ code: \"a\", name: \"Android app\", color: \"#2ca25f\" }],\n    hasChart: true,\n  },\n  {\n    id: \"emis\",\n    title: \"Education Management Information System (EMIS)\",\n    legend: [{ code: \"e\", name: \"DHIS2 for Education\", color: \"#1d91c0\" }],\n    hasChart: false,\n  },\n];\n\nconst parseData = (data) => {\n  const rows = data.feed.entry;\n  const row = rows[0];\n  const years = [];\n\n  for (let col in row) {\n    if (row.hasOwnProperty(col)) {\n      if (col.slice(0, 5) === \"gsx$y\") {\n        years.push(col.slice(-4));\n      }\n    }\n  }\n\n  const lastYear = years[years.length - 1];\n  const countries = {};\n  const year = {};\n\n  rows.forEach((row) => {\n    const id = row[\"gsx$code\"][\"$t\"];\n    const name = row[\"gsx$name\"][\"$t\"];\n\n    const country = (countries[id] = {\n      name: name,\n    });\n\n    years.forEach((y) => {\n      let letters = row[\"gsx$y\" + y][\"$t\"];\n\n      // Remove and fix in google spreadsheet\n      if (id.startsWith(\"IN-\")) {\n        // s/p is not valid for indian states\n        letters = letters.replace(\"s\", \"\").replace(\"p\", \"\");\n      }\n\n      if (letters.length) {\n        country[y] = letters;\n\n        if (!year[y]) {\n          year[y] = {\n            p: 0, // pilot\n            s: 0, // national scale\n            i: 0, // indian state\n            t: 0, // tracker\n            a: 0, // android\n            e: 0, // education\n            c: 0, // covid-19\n            v: 0, // covid-19 (development)\n          };\n        }\n\n        letters.split(\"\").forEach((value) => {\n          year[y][value]++;\n        });\n      }\n    });\n  });\n\n  return { countries, year, years, lastYear };\n};\n\nexport const getData = () =>\n  fetchJsonp(\n    \"//spreadsheets.google.com/feeds/list/1Fd-vBoJPjp5wdCyJc7d_LOJPOg5uqdzVa3Eq5-VFR-g/1/public/values?alt=json-in-script\",\n    { jsonpCallback: \"callback\" }\n  )\n    .then((response) => response.json())\n    .then(parseData);\n","import React from \"react\";\nimport SidebarToggle from \"./SidebarToggle\";\nimport Category from \"./Category\";\nimport { categories } from \"../utils/data\";\n\nconst Sidebar = ({ category, data, isDocked, onClose, onSelect }) => (\n  <>\n    {!isDocked && <SidebarToggle type=\"close\" onClick={onClose} />}\n    <div className=\"Sidebar-header\">\n      <h1>DHIS2 in action</h1>\n      <p>\n        DHIS2 is in use all over the world. Check out different use cases with\n        this interactive map.\n      </p>\n    </div>\n    {categories.map(item => (\n      <Category\n        key={item.id}\n        onClick={onSelect}\n        selected={category === item.id}\n        data={data}\n        {...item}\n      />\n    ))}\n  </>\n);\n\nexport default Sidebar;\n","import React, { useState, useEffect } from \"react\";\nimport ReactSidebar from \"react-sidebar\";\nimport SidebarContent from \"./SidebarContent\";\nimport SidebarToggle from \"./SidebarToggle\";\nimport \"./Sidebar.css\";\n\nconst App = ({ category, data, onSelect, children }) => {\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [sidebarDocked, setSidebarDocked] = useState(false);\n\n  useEffect(() => {\n    const mql = window.matchMedia(`(min-width: 700px)`);\n    mql.addListener(() => setSidebarDocked(mql.matches));\n    setSidebarDocked(mql.matches);\n  }, []);\n\n  return (\n    <ReactSidebar\n      sidebar={\n        <SidebarContent\n          category={category}\n          data={data}\n          onSelect={onSelect}\n          isDocked={sidebarDocked}\n          onClose={() => setSidebarOpen(false)}\n        />\n      }\n      open={sidebarOpen}\n      docked={sidebarDocked}\n      onSetOpen={() => setSidebarOpen(true)}\n      rootClassName=\"App\"\n      contentClassName=\"App-main\"\n      overlayClassName=\"App-overlay\"\n      sidebarClassName=\"Sidebar\"\n    >\n      {sidebarOpen && !sidebarDocked && (\n        <div className=\"App-mask\" onClick={() => setSidebarOpen(false)}></div>\n      )}\n      {children}\n      {!sidebarOpen && !sidebarDocked && (\n        <SidebarToggle type=\"open\" onClick={() => setSidebarOpen(true)} />\n      )}\n    </ReactSidebar>\n  );\n};\n\nexport default App;\n","import L, { GeoJSON } from \"leaflet\";\n\nconst Graticule = GeoJSON.extend({\n  options: {\n    style: {\n      color: \"#333\",\n      weight: 1\n    },\n    interval: 20\n  },\n\n  initialize(options) {\n    L.Util.setOptions(this, options);\n    this._layers = {};\n\n    if (this.options.sphere) {\n      this.addData(this._getFrame());\n    } else {\n      this.addData(this._getGraticule());\n    }\n  },\n\n  _getFrame() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        this._getMeridian(-180).concat(this._getMeridian(180).reverse())\n      ]\n    };\n  },\n\n  _getGraticule() {\n    var features = [],\n      interval = this.options.interval;\n\n    // Meridians\n    for (var lng = 0; lng <= 180; lng = lng + interval) {\n      features.push(\n        this._getFeature(this._getMeridian(lng), {\n          name: lng ? lng.toString() + \"° E\" : \"Prime meridian\"\n        })\n      );\n      if (lng !== 0) {\n        features.push(\n          this._getFeature(this._getMeridian(-lng), {\n            name: lng.toString() + \"° W\"\n          })\n        );\n      }\n    }\n\n    // Parallels\n    for (var lat = 0; lat <= 90; lat = lat + interval) {\n      features.push(\n        this._getFeature(this._getParallel(lat), {\n          name: lat ? lat.toString() + \"° N\" : \"Equator\"\n        })\n      );\n      if (lat !== 0) {\n        features.push(\n          this._getFeature(this._getParallel(-lat), {\n            name: lat.toString() + \"° S\"\n          })\n        );\n      }\n    }\n\n    return {\n      type: \"FeatureCollection\",\n      features: features\n    };\n  },\n\n  _getMeridian(lng) {\n    lng = this._lngFix(lng);\n    var coords = [];\n    for (var lat = -90; lat <= 90; lat++) {\n      coords.push([lng, lat]);\n    }\n    return coords;\n  },\n\n  _getParallel(lat) {\n    var coords = [];\n    for (var lng = -180; lng <= 180; lng++) {\n      coords.push([this._lngFix(lng), lat]);\n    }\n    return coords;\n  },\n\n  _getFeature(coords, prop) {\n    return {\n      type: \"Feature\",\n      geometry: {\n        type: \"LineString\",\n        coordinates: coords\n      },\n      properties: prop\n    };\n  },\n\n  _lngFix(lng) {\n    if (lng >= 180) return 179.999999;\n    if (lng <= -180) return -179.999999;\n    return lng;\n  }\n});\n\nexport default Graticule;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { map, geoJSON } from \"leaflet\";\nimport { CRS } from \"proj4leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport Graticule from \"../utils/graticule\";\nimport { categories } from \"../utils/data\";\nimport \"./Map.css\";\n\nconst noDataColor = \"#fff\";\n\nconst bounds = [\n  [-40, -100],\n  [50, 165]\n];\n\nconst Map = ({ category, data, height }) => {\n  const [instance, setInstance] = useState();\n  const [layer, setLayer] = useState();\n  const container = useRef();\n\n  useEffect(() => {\n    setInstance(\n      map(container.current, {\n        crs: new CRS(\n          \"ESRI:53009\",\n          \"+proj=moll +lon_0=0 +x_0=0 +y_0=0 +a=6371000 +b=6371000 +units=m +no_defs\",\n          {\n            resolutions: [50000, 40000, 30000, 20000, 10000, 5000, 2500, 1250]\n          }\n        ),\n        maxZoom: 7\n      }).fitBounds(bounds)\n    );\n  }, [container]);\n\n  useEffect(() => {\n    if (instance) {\n      instance.invalidateSize();\n      instance.fitBounds(bounds);\n    }\n  }, [instance, height]);\n\n  useEffect(() => {\n    if (instance) {\n      new Graticule({\n        sphere: true,\n        style: {\n          opacity: 0,\n          fillColor: \"#edf7ff\",\n          fillOpacity: 1,\n          clickable: false\n        }\n      }).addTo(instance);\n\n      fetch(\"./countries_indian_states.json\")\n        .then(response => response.json())\n        .then(features => {\n          setLayer(\n            geoJSON(features, {\n              color: \"#555\",\n              weight: 1,\n              fillColor: noDataColor,\n              fillOpacity: 0.75\n            }).addTo(instance)\n          );\n\n          instance.invalidateSize();\n        })\n        .catch(error => console.log(error));\n    }\n  }, [instance, setLayer]);\n\n  useEffect(() => {\n    if (layer && category && data) {\n      const { countries, lastYear } = data;\n      const { legend } = categories.find(c => c.id === category);\n\n      layer.eachLayer(item =>\n        item.setStyle({\n          fillColor: noDataColor\n        })\n      );\n\n      layer.eachLayer(item => {\n        const code = item.feature.properties.CODE;\n\n        if (code && countries[code] && countries[code][lastYear]) {\n          const country = countries[code];\n          const letters = country[lastYear];\n\n          // India: show country or states\n          if (code === \"IN\") {\n            if (legend.some(({ code }) => letters.includes(code))) {\n              item.bringToFront();\n            } else {\n              item.bringToBack();\n            }\n          }\n\n          legend.forEach(({ code, color }) => {\n            if (letters.indexOf(code) !== -1) {\n              item.setStyle({\n                fillColor: color\n              });\n            }\n          });\n        }\n      });\n\n      layer.bindPopup(({ feature }) => {\n        const { CODE, NAME } = feature.properties;\n        const country = data.countries[CODE];\n        const name = `<h2>${NAME}</h2>`;\n\n        if (!country) {\n          return name;\n        }\n\n        const items = legend\n          .map(i => ({\n            ...i,\n            year: data.years.find(\n              y => country[y] && country[y].includes(i.code)\n            )\n          }))\n          .filter(i => i.year);\n\n        const content = items.map(\n          ({ name, year }) =>\n            `${\n              name.includes(\"National\")\n                ? CODE.includes(\"-\")\n                  ? \"State\"\n                  : \"National\"\n                : name\n            }: ${year}`\n        );\n\n        return `${name}${content.join(\"<br/>\")}`;\n      });\n    }\n  }, [layer, category, data]);\n\n  return <div ref={container} className=\"Map\" style={{ height }}></div>;\n};\n\nexport default Map;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { chart } from \"highcharts\";\nimport { categories } from \"../utils/data\";\nimport \"./Chart.css\";\n\nconst Chart = ({ category, data, show }) => {\n  const [instance, setInstance] = useState();\n  const container = useRef();\n\n  useEffect(() => {\n    setInstance(\n      chart(\"chart\", {\n        chart: {\n          type: \"area\",\n          marginTop: 4,\n        },\n        title: {\n          text: null, // 'Countries using DHIS 2'\n        },\n        xAxis: {\n          tickmarkPlacement: \"on\",\n          title: {\n            enabled: false,\n          },\n        },\n        yAxis: {\n          title: {\n            text: \"Countries using DHIS2\",\n          },\n        },\n        tooltip: {\n          split: true,\n        },\n        plotOptions: {\n          area: {\n            stacking: \"normal\",\n            lineColor: \"#666666\",\n            lineWidth: 1,\n            marker: {\n              lineWidth: 1,\n              lineColor: \"#666666\",\n            },\n          },\n        },\n        series: [],\n        legend: {\n          enabled: false,\n        },\n      })\n    );\n  }, [container]);\n\n  useEffect(() => {\n    if ((instance, category, data)) {\n      const { series, xAxis, yAxis } = instance;\n      const { title, legend } = categories.find((c) => c.id === category);\n      const { years, year } = data;\n\n      instance.reflow();\n\n      const yearRange = years.slice(\n        years.findIndex((y) => legend.some(({ code }) => year[y][code]))\n      );\n\n      while (series.length) {\n        series[0].remove();\n      }\n\n      xAxis[0].setCategories(yearRange);\n      yAxis[0].setTitle({ text: `${title} implementations` });\n\n      legend\n        .slice()\n        .reverse()\n        .forEach(({ code, name, color }) =>\n          instance.addSeries({\n            name: name,\n            data: yearRange.map((y) => year[y][code]),\n            color: color,\n          })\n        );\n    }\n  }, [instance, category, data]);\n\n  useEffect(() => {\n    if (instance && show) {\n      instance.reflow();\n    }\n  }, [instance, show]);\n\n  return (\n    <div\n      id=\"chart\"\n      ref={container}\n      className={`Chart Chart-${show ? \"show\" : \"hide\"}`}\n    ></div>\n  );\n};\n\nexport default Chart;\n","import React, {\n  useRef,\n  useState,\n  useMemo,\n  useCallback,\n  useEffect,\n} from \"react\";\nimport { categories } from \"../utils/data\";\nimport \"./List.css\";\n\nconst marginTop = 70;\nconst marginBottom = 20;\n\nconst List = ({ category, data, show }) => {\n  const container = useRef();\n  const [cols, setCols] = useState(null);\n\n  const lists = useMemo(() => {\n    if (category && data) {\n      const { legend } = categories.find((c) => c.id === category);\n      const { countries, lastYear } = data;\n\n      setCols(null);\n\n      return legend.map(({ code, name, color }) => ({\n        name,\n        color,\n        items: Object.values(countries)\n          .filter((country) => {\n            const letters = country[lastYear];\n            return letters && letters.indexOf(code) !== -1;\n          }, [])\n          .map((c) => c.name)\n          .sort(),\n      }));\n    }\n  }, [category, data]);\n\n  const onResize = useCallback(() => {\n    if (lists && container.current) {\n      const { clientHeight } = container.current;\n      const count = Math.floor((clientHeight - marginTop - marginBottom) / 20);\n      const cols = lists.map(({ items }) => Math.ceil(items.length / count));\n\n      setCols(cols);\n    }\n  }, [container, lists]);\n\n  useEffect(() => {\n    if (show) {\n      window.addEventListener(\"resize\", onResize);\n      onResize();\n    }\n    return () => window.removeEventListener(\"resize\", onResize);\n  }, [show, onResize]);\n\n  return (\n    <div\n      id=\"list\"\n      ref={container}\n      className={`List List-${show ? \"show\" : \"hide\"}`}\n    >\n      <div className=\"container\">\n        {cols &&\n          lists &&\n          lists.map(({ name, color, items }, index) => {\n            const numCols = cols[index];\n\n            return (\n              <div\n                key={name}\n                className=\"section\"\n                style={{\n                  flexGrow: numCols,\n                  flexShrink: numCols,\n                }}\n              >\n                <span style={{ backgroundColor: color }}></span>\n                <h2>\n                  {name}: {items.length}\n                </h2>\n                <ul\n                  style={{\n                    columnCount: numCols,\n                  }}\n                >\n                  {items.map((name) => (\n                    <li key={name}>{name}</li>\n                  ))}\n                </ul>\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useState } from \"react\";\nimport Chart from \"./Chart\";\nimport List from \"./List\";\nimport { categories } from \"../utils/data\";\nimport \"./ChartList.css\";\n\nconst ChartListToggle = ({ category, data }) => {\n  const [showChart, setShowChart] = useState(true);\n  const { hasChart } = categories.find((c) => c.id === category);\n\n  return (\n    <div className=\"ChartList\">\n      <div className=\"menu\">\n        {hasChart && (\n          <div className=\"toggle\" onClick={() => setShowChart(!showChart)}>\n            {showChart\n              ? \"View list of implementations\"\n              : \"View chart of adoption over time\"}\n          </div>\n        )}\n      </div>\n      <div className=\"wrapper\" style={{ top: hasChart ? 30 : 5 }}>\n        <Chart category={category} data={data} show={hasChart && showChart} />\n        <List category={category} data={data} show={!showChart || !hasChart} />\n      </div>\n    </div>\n  );\n};\n\nexport default ChartListToggle;\n","import React, { useState, useEffect } from \"react\";\nimport Fullscreen from \"./components/Fullscreen\";\nimport Sidebar from \"./components/Sidebar\";\nimport Map from \"./components/Map\";\nimport ChartList from \"./components/ChartList\";\n// import Chart from \"./components/Chart\";\n// import List from \"./components/List\";\nimport { categories, getData } from \"./utils/data\";\nimport \"./App.css\";\n\nconst getInitialCategory = () => {\n  const { hash } = window.location;\n\n  if (hash) {\n    const cat = hash.substr(1);\n\n    if (categories.find((c) => c.id === cat)) {\n      return cat;\n    }\n  }\n\n  return \"health\"; // Default category\n};\n\nconst App = () => {\n  const [category, setCategory] = useState(getInitialCategory());\n  const [data, setData] = useState();\n  // const { showChart } = categories.find((c) => c.id === category);\n\n  useEffect(() => {\n    getData().then(setData);\n  }, []);\n\n  useEffect(() => {\n    window.location.hash = `#${category}`;\n  }, [category]);\n\n  //\n  // <List category={category} data={data} show={true} />\n\n  /*\n  <div>\n          <ChartListToggle />\n          <Chart category={category} data={data} show={showChart} />\n        </div>\n        */\n\n  return (\n    <Fullscreen>\n      <Sidebar category={category} data={data} onSelect={setCategory}>\n        <Map\n          category={category}\n          data={data}\n          // height={showChart ? \"58%\" : \"100%\"}\n          height={\"58%\"}\n        />\n        <ChartList category={category} data={data} />\n      </Sidebar>\n    </Fullscreen>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}